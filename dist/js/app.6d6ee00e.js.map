{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/colors.js","webpack:///./src/modules/createScene.js","webpack:///./src/modules/createCamera.js","webpack:///./src/modules/createRenderer.js","webpack:///./src/modules/createSun.js","webpack:///./src/modules/Cube.js","webpack:///./src/modules/materials.js","webpack:///./src/sceneObjects/pipeConnection.js","webpack:///./src/sceneObjects/pipeCorner.js","webpack:///./src/sceneObjects/BottomIsland/chimney.js","webpack:///./src/sceneObjects/BottomIsland/fence.js","webpack:///./src/sceneObjects/BottomIsland/filter.js","webpack:///./src/sceneObjects/BottomIsland/BottomIsland.js","webpack:///./src/sceneObjects/fan.js","webpack:///./src/sceneObjects/fence.js","webpack:///./src/sceneObjects/pine.js","webpack:///./src/sceneObjects/MiddleIsland/Windvane.js","webpack:///./src/sceneObjects/MiddleIsland/Ladder.js","webpack:///./src/sceneObjects/stones.js","webpack:///./src/sceneObjects/MiddleIsland/MiddleIsland.js","webpack:///./src/sceneObjects/TopIsland/chimney.js","webpack:///./src/sceneObjects/TopIsland/House.js","webpack:///./src/sceneObjects/TopIsland/TopIsland.js","webpack:///./src/sceneObjects/Zeppelin/Balloon.js","webpack:///./src/sceneObjects/Zeppelin/hose.js","webpack:///./src/sceneObjects/Zeppelin/Fan.js","webpack:///./src/sceneObjects/Zeppelin/Tanks.js","webpack:///./src/sceneObjects/Zeppelin/Turbine.js","webpack:///./src/sceneObjects/Zeppelin/Cabine.js","webpack:///./src/sceneObjects/Zeppelin/Zeppelin.js","webpack:///./src/modules/Water.js","webpack:///./src/modules/LampPost.js","webpack:///./src/modules/lightParams.js","webpack:///./src/modules/daytimeParams.js","webpack:///./src/modules/Lang.js","webpack:///./src/modules/Time.js","webpack:///./src/modules/init.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","colors","lightGreen","darkGreen","lightBrown","darkBronw","darkGrey","darkMetal","lightMetal","white","wood","brick","roof","sky","red","rust","water","balloon","glass","createScene","scene","Scene","createCamera","width","height","aspectRatio","fieldOfView","nearPlane","farPlane","camera","PerspectiveCamera","position","set","rotation","createRenderer","_ref","asyncToGenerator","regeneratorRuntime","mark","_callee","id","antialias","renderer","container","_args","arguments","wrap","_context","prev","next","undefined","WebGLRenderer","alpha","setSize","shadowMap","enabled","document","getElementById","appendChild","domElement","abrupt","stop","this","_x","_x2","_x3","createSun","sunLight","DirectionalLight","castShadow","shadow","left","right","top","bottom","near","far","mapSize","Cube","size","x","y","z","color","concat","Math","random","classCallCheck","depth","geometry","BoxGeometry","material","MeshPhongMaterial","flatShading","mesh","Mesh","receiveShadow","updateMatrix","materials","green","specular","shininess","side","DoubleSide","transparent","opacity","line","LineBasicMaterial","linewidth","override","wireframe","PipeConnection","isFrontRing","isBackRing","radius","segmentsCount","needMaterial","Geometry","base","CylinderGeometry","PI","merge","matrix","frontRing","TorusGeometry","backRing","segmentGeometry","segment","cos","sin","PipeCorner","isBottomConnection","isTopConnection","Object3D","singleGeometry","arcGeometry","arc","topConnection","bottomConnection","pipeCorner","Chimney","arcShape","Shape","moveTo","absarc","holePath","Path","holes","extrudeSettings","curveSegments","steps","bevelEnabled","ExtrudeGeometry","Fence","isClosed","gridHeight","angle","atan","pillarsGeometry","pillar","anotherPillar","clone","bar","pillars","helixGeometry","vertices","Vector3","helix","Line","lineGeometry","step","diff","tan","grid","LineSegments","add","Filter","linesGeometry","lines","BottomIsland","chimneyCombinedGeometry","chimneysParams","scale","chimney","bigChimneyGeometry","chimneyInner","chimneyOuter","bigChimney","chimneyCombined","pipesParams","fenceParams","fence","filter","Fan","_this","propeller","staticGroupGeometry","pipe","engine","staticGroup","hubGeometry","hub","blades","bladeGeometry","blade","translate","centerBoard","topBoard","bottomBoard","paling","Pine","trunkGeometry","trunk","branchesGeometry","R","branchesLevel","branches","Windvane","fan","standGeometry","pillarGeometry","shaft","beam","platform","stand","vaneSupportGeometry","bevel","anotherBevel","vaneSupport","vane","axle","tailShape","tailWidth","tailHeight","lineTo","tail","fanBladesGeometry","fanBlades","fanCenter","Ladder","ladderGeometry","stair","Stones","coordinates","stonesGeometry","stone","MiddleIsland","_this$mesh","fans","fansParams","rx","rz","ry","mx","mz","count","fenceWidth","fenceGeometry","fencePerimeter","pine","windvane","ladder","stonesCoordinates","stones","pipesGeometry","type","options","setParams","el","params","pipes","toConsumableArray","map","spline","CatmullRomCurve3","pipeShape","extrudePath","House","firstFloor","basement","roofLow","roofMiddle","roofTop","roofCombinedGeometry","roofParams","rT","rB","roofPart","roofCombined","chimneyParams","doorShape","door","windowShape","windowGeometry","horizontalFrame","verticalFrame","houseWindow","TopIsland","house","pineParams","sx","sy","sz","Balloon","pointsCount","points","Vector2","LatheGeometry","frameShape","frame","Hose","shape","full","mirrored","engineRadius","engineGeometry","engineMain","engineTopPoints","engineTop","engineTier","sideLeft","sideRight","engineSegment","hose","engineHub","propellerGeometry","bladesHub","bladesGeometry","bladeShape","applyMatrix","Matrix4","makeRotationX","Tanks","tanksGeometry","tankGeometry","tankRadius","tankCenter","tankTopPoints","tankTop","tankBottom","tankHub","tankLeft","tankRight","tier","Turbine","turbineGeometry","turbineOuterShape","turbineOuter","engineSupport","turbine","propellerHub","Cabine","cabine","turbines","turbineParams","Zeppelin","tanks","hosesGeometry","hosesParams","hoses","Water","verts","v","vprops","waves","ang","amp","speed","verticesNeedUpdate","circle","cirlceRadius","circleSegments","mergeVertices","LampPost","status","light","intensity","distance","decay","baseVertical","baseHorizontal","baseAngle","baseGeometry","lamp","PointLight","lightParams","sunrise","hemisphereLight","ambientLight","midday","sunset","midnight","breakpoints","Lang","index","localData","lang","navigator","language","substring","en","weekday","month","ru","Time","Date","now","hours","getHours","minutes","getMinutes","date","getDate","getMonth","day","getDay","timeNode","innerHTML","dayNode","update","init","_init","WIDTH","HEIGHT","setLights","bottomIsland","middleIsland","topIsland","zeppelin","islands","river","riverParams","_i","lampPosts","lampPostParams","_i2","lampPost","stats","clock","delta","mousePos","gyroscope","time","worldNode","updateLights","easing","loop","gui","guiContainer","dayTimeGUI","begin","getDelta","rotate","rotateFan","moveWaves","nY","nX","render","end","requestAnimationFrame","className","setHex","dayTime","_sunLight$position","turnLights","innerWidth","innerHeight","addEventListener","aspect","updateProjectionMatrix","sent","HemisphereLight","AmbientLight","riverPart","Clock","event","clientX","clientY","beta","gamma","body","classList","dat","autoplace","closed","cameraControls","isOverride","addFolder","open","showControls","process","toggleControls","remove","keyCode","console","log"],"mappings":"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","file":"js/app.6d6ee00e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nexport const colors = {\n\tlightGreen: 0x9db614,\n\tdarkGreen:\t0x59ac27,\n\n\tlightBrown:\t0xffdba9,\n\tdarkBronw:\t0xd0957f,\n\n\tdarkGrey:\t0x72636a,\n\tdarkMetal:\t0x72636a,\n\tlightMetal: 0xdcbbb4,\n\t\n\twhite: \t\t0xfdfcf7,\n\twood:\t\t0xa76e17,\n\tbrick:\t\t0xd6b48e,\n\troof:\t\t0x793156,\n\tsky:\t\t0x80b6dc,\n\n\tred:\t\t0xff0000,\n\trust:\t\t0xb98475,\n\n\twater:\t\t0x80b6dc,\n\n\tballoon:\t0xd9d9d9,\n\tglass:\t\t0xeeeeee\n}","import { Scene, Fog } from 'three';\n\nimport { colors } from './colors';\n\n\nexport default function createScene() {\n\n\tlet scene = new Scene();\n\t// scene.fog = new Fog(colors.sky, 0, 10000);\n\n\treturn scene;\n}","import { PerspectiveCamera } from 'three';\n\n\nexport default function createCamera(width, height) {\n\n\tlet aspectRatio = width / height;\n\tconst fieldOfView = 50;\n\tconst nearPlane = 1;\n\tconst farPlane = 3500;\n\n\tlet camera = new PerspectiveCamera(\n\t\tfieldOfView,\n\t\taspectRatio,\n\t\tnearPlane,\n\t\tfarPlane\n\t);\n\n\tcamera.position.set(0, -350, 2150);\n\tcamera.rotation.set(.20, .036, 0);\n\n\treturn camera;\n}","import { WebGLRenderer } from 'three';\n\n\nconst createRenderer = async (id, width, height, antialias = true) => {\n\n\tconst renderer = new WebGLRenderer({\n\t\talpha: true,\n\t\tantialias: antialias\n\t})\n\n\trenderer.setSize(width, height)\n\n\trenderer.shadowMap.enabled = true;\n\t// renderer.shadowMap.renderReverseSided = true;\n\n\tconst container = document.getElementById(id);\n\tcontainer.appendChild(renderer.domElement);\n\n\treturn renderer;\n}\n\nexport default createRenderer\n","import { DirectionalLight } from 'three';\n\n\nexport default function createSun() {\n\n\tlet sunLight = new DirectionalLight(0xffffff, .75);\n\n\tsunLight.position.set(-280, 695, 350);\n\tsunLight.castShadow = true;\n\n\tsunLight.shadow.camera.left \t= -800;\n\tsunLight.shadow.camera.right \t= 800;\n\tsunLight.shadow.camera.top \t\t= 800;\n\tsunLight.shadow.camera.bottom \t= -800;\n\tsunLight.shadow.camera.near \t= 1;\n\tsunLight.shadow.camera.far \t\t= 1500;\n\n\tsunLight.shadow.mapSize.width \t= 512;\n\tsunLight.shadow.mapSize.height \t= 512;\n\n\treturn sunLight;\n}","import { Mesh, BoxGeometry, MeshPhongMaterial } from 'three';\n\nimport { colors } from './colors';\n\n\nexport default class Cube {\n\tconstructor(\n\t\tsize = [100, 100, 100],\n\t\tposition = { x: 0, y: 0, z: 0 },\n\t\tcolor = null, name = `cube-${~~(Math.random() * 1000)}`) {\n\n\t\tthis.width \t= size[0];\n\t\tthis.height = size[1];\n\t\tthis.depth \t= size[2];\n\n\t\tthis.color = color;\n\n\t\tthis.geometry = new BoxGeometry(this.width, this.height, this.depth);\n\n\t\tthis.material;\n\n\t\tif (this.color) {\n\t\t\tthis.material = new MeshPhongMaterial({\n\t\t\t\tcolor: this.color,\n\t\t\t\tflatShading: true,\n\t\t\t\t// transparent: true,\n\t\t\t\t// opacity: .6\n\t\t\t});\n\t\t} else {\n\t\t\tthis.material = null\n\t\t};\n\n\t\tthis.mesh = new Mesh(this.geometry, this.material);\n\t\tthis.mesh.castShadow = true;\n\t\tthis.mesh.receiveShadow = true;\n\n\t\tthis.mesh.position.x += position.x;\n\t\tthis.mesh.position.y += position.y;\n\t\tthis.mesh.position.z += position.z;\n\t\t\n\t\tthis.mesh.name = name;\n\n\t\tthis.mesh.updateMatrix();\n\t}\n}","import { colors } from './colors';\n\nimport { MeshPhongMaterial, DoubleSide, LineBasicMaterial } from 'three';\n\n\nexport const materials = {\n\twood:\t\tnew MeshPhongMaterial({ color: colors.wood, flatShading: true }),\n\tgreen:\t\tnew MeshPhongMaterial({ color: colors.darkGreen, flatShading: true }),\n\tdarkMetal:\tnew MeshPhongMaterial(\n\t\t{\n\t\t\tcolor: colors.darkMetal,\n\t\t\tspecular: 0x050505,\n\t\t\tshininess: 100\n\t\t}\n\t),\n\n\tlightMetal: new MeshPhongMaterial(\n\t\t{\n\t\t\tcolor: colors.lightMetal,\n\t\t\tside: DoubleSide,\n\t\t\tspecular: 0x050505,\n\t\t\tshininess: 100\n\t\t}\n\t),\n\n\tglass: new MeshPhongMaterial(\n\t\t{\n\t\t\tcolor: colors.glass,\n\t\t\tside: DoubleSide,\n\t\t\ttransparent: true,\n\t\t\topacity: .5,\n\t\t\tspecular: 0x050505,\n\t\t\tshininess: 10000\n\t\t}\n\t),\n\n\trust: new MeshPhongMaterial(\n\t\t{\n\t\t\tcolor: colors.rust,\n\t\t\tside: DoubleSide,\n\t\t\tspecular: 0x050505,\n\t\t\tshininess: 100\n\t\t}\n\t),\n\n\tbrick:\t\tnew MeshPhongMaterial({ color: colors.brick, flatShading: true }),\n\troof:\t\tnew MeshPhongMaterial({ color: colors.roof, flatShading: true, }),\n\twhite:\t\tnew MeshPhongMaterial({ color: colors.white, flatShading: true }),\n\tred:\t\tnew MeshPhongMaterial({ color: colors.red, flatShading: true }),\n\t\n\tballoon: \tnew MeshPhongMaterial({\n\t\tcolor: colors.balloon,\n\t\tflatShading: true,\n\t\tside: DoubleSide,\n\t\t// shadowSide: DoubleSide,\n\t}),\n\n\tline:\t\tnew LineBasicMaterial({ color: colors.lightMetal, linewidth: 1 }),\n\n\twater:\tnew MeshPhongMaterial(\n\t\t{\n\t\t\tcolor: colors.water,\n\t\t\tflatShading: true,\n\t\t\tspecular: 0x050505,\n\t\t\tshininess: 1000,\n\t\t\ttransparent: true,\n\t\t\topacity: .8\n\t\t}\n\t),\n\n\n\t// for debug\n\toverride:\tnew MeshPhongMaterial({ color: 0xdcb780, wireframe: true })\n}","import {\n\tGeometry,\n\tMesh,\n\tCylinderGeometry,\n\tTorusGeometry\n} from 'three';\n\nimport { materials } from '../modules/materials';\n\n\nexport default class PipeConnection {\n\tconstructor(\n\t\tm = 1,\n\t\tisFrontRing = true,\n\t\tisBackRing = true,\n\t\tradius = 35,\n\t\tsegmentsCount = 16,\n\t\tneedMaterial = false) {\n\n\t\tconst geometry = new Geometry();\n\n\t\tthis.radius = radius;\n\t\tthis.segmentsCount = segmentsCount;\n\t\t\n\t\tconst material = (needMaterial) ? materials.lightMetal : null;\n\n\n\t\t// base\n\t\tconst base = new Mesh(\n\t\t\tnew CylinderGeometry( radius, radius, (24 * m), 16, 1, true )\n\t\t);\n\t\tbase.rotation.y = (2 * Math.PI / 80);\n\t\tbase.updateMatrix();\n\n\t\tgeometry.merge(base.geometry, base.matrix);\n\n\n\t\t// rings\n\t\tif (isFrontRing) {\n\t\t\tconst frontRing = new Mesh(\n\t\t\t\tnew TorusGeometry( radius, 6, 10, 16, (2 * Math.PI) )\n\t\t\t);\n\t\t\tfrontRing.position.y = 12 * m;\n\t\t\tfrontRing.rotation.x = Math.PI / 2;\n\t\t\tfrontRing.updateMatrix();\n\t\t\tgeometry.merge(frontRing.geometry, frontRing.matrix);\n\t\t};\n\n\t\tif (isBackRing) {\n\t\t\tconst backRing = new Mesh(\n\t\t\t\tnew TorusGeometry( radius, 6, 10, 16, (2 * Math.PI) )\n\t\t\t);\n\t\t\tbackRing.position.y = -12 * m;\n\t\t\tbackRing.rotation.x = Math.PI / 2;\n\t\t\tbackRing.updateMatrix();\n\t\t\tgeometry.merge(backRing.geometry, backRing.matrix);\n\t\t};\n\n\t\n\t\t// segments\n\t\tconst segmentGeometry = new CylinderGeometry( 2, 2, (24 * m), 3, 1, true );\n\t\t\n\t\tfor (let i = 0; i < this.segmentsCount; i++) {\n\n\t\t\tconst segment = new Mesh(segmentGeometry);\n\n\t\t\tsegment.position.set(\n\t\t\t\tradius * (Math.cos(i * (2 *Math.PI) / this.segmentsCount)),\n\t\t\t\t0,\n\t\t\t\tradius * (Math.sin(i * (2 * Math.PI) / this.segmentsCount))\n\t\t\t);\n\t\t\tsegment.updateMatrix();\n\n\t\t\tgeometry.merge(segment.geometry, segment.matrix);\n\t\t};\n\n\n\t\tthis.mesh = new Mesh(geometry, material);\n\t\tthis.mesh.name = 'pipe-connection';\n\t}\n}","import {\n\tGeometry,\n\tMesh,\n\tObject3D,\n\tCylinderGeometry,\n\tTorusGeometry\n} from 'three';\n\nimport { materials } from '../modules/materials';\n\nimport PipeConnection from './pipeConnection';\n\n\nexport default class PipeCorner {\n\tconstructor(isBottomConnection = true, isTopConnection = true) {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'pipe-corner';\n\n\t\tconst singleGeometry = new Geometry();\n\n\t\t// pipe radius\n\t\tconst radius = 35;\n\t\n\t\t// arc\n\t\tconst arcGeometry = new TorusGeometry((2 * radius), radius, 16, 16, (Math.PI / 2) );\n\t\tconst arc = new Mesh(arcGeometry);\n\t\tarc.rotation.z = Math.PI / 2;\n\t\tarc.updateMatrix();\n\n\t\tsingleGeometry.merge(arc.geometry, arc.matrix);\n\n\n\t\t// connections\n\t\tif (isTopConnection) {\n\t\t\tconst topConnection = (new PipeConnection()).mesh;\n\t\t\ttopConnection.rotation.z += Math.PI / 2;\n\t\t\ttopConnection.position.y += 2 * radius;\n\t\t\ttopConnection.updateMatrix();\n\n\t\t\tsingleGeometry.merge(topConnection.geometry, topConnection.matrix);\n\t\t};\n\n\t\tif (isBottomConnection) {\n\t\t\tconst bottomConnection = (new PipeConnection()).mesh;\n\t\t\tbottomConnection.position.x -= 2 * radius;\n\t\t\tbottomConnection.updateMatrix();\n\n\t\t\tsingleGeometry.merge(bottomConnection.geometry, bottomConnection.matrix);\n\t\t};\n\n\n\t\t// final mesh\n\t\tconst pipeCorner = new Mesh(singleGeometry, materials.lightMetal);\n\t\tpipeCorner.castShadow = true;\n\t\tpipeCorner.receiveShadow = true;\n\n\t\tthis.mesh = pipeCorner;\n\t}\n}","import { Mesh, Shape, Path, ExtrudeGeometry } from 'three';\n\n// import Cube from '../../modules/Cube';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Chimney {\n\tconstructor() {\n\n\t\tconst arcShape = new Shape();\n\t\tarcShape.moveTo(0, 0);\n\t\tarcShape.absarc(0, 0, 12, 0, Math.PI * 2);\n\n\t\tconst holePath = new Path();\n\t\tholePath.moveTo(0, 0);\n\t\tholePath.absarc(0, 0, 10, 0, Math.PI * 2);\n\t\tarcShape.holes.push( holePath );\n\n\n\t\tconst extrudeSettings = {\n\t\t\tcurveSegments: 8,\n\t\t\tsteps: 1,\n\t\t\tdepth: 1,\n\t\t\tbevelEnabled: false\n\t\t};\n\n\t\t\n\t\tconst geometry = new ExtrudeGeometry(arcShape, extrudeSettings);\n\t\t\n\t\tthis.mesh = new Mesh(geometry, materials.rust);\n\t\tthis.mesh.rotation.x += Math.PI / 2;\n\t\tthis.mesh.castShadow = true;\n\t\tthis.mesh.receiveShadow = true;\n\t\tthis.mesh.name = 'chimney';\n\t}\t\n}","import {\n\tObject3D,\n\tVector3,\n\tGeometry,\n\tLine,\n\tLineSegments,\n\tBoxGeometry,\n\tMesh\n} from 'three';\n\nimport { colors } from '../../modules/colors';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Fence {\n\tconstructor(isClosed = false) {\n\n\t\tthis.mesh = new Object3D;\n\t\tthis.mesh.name = 'fence';\n\n\t\tconst height = 90;\n\t\tconst width = (400 - 10) / 3;\n\n\t\tconst gridHeight = height - 20;\n\t\tconst angle = Math.atan(gridHeight / width);\n\n\n\t\t// pillars\n\t\tconst pillarsGeometry = new Geometry();\n\n\t\tconst pillar = new Mesh(new BoxGeometry(5, height, 5));\n\n\t\tpillarsGeometry.merge(pillar.geometry, pillar.matrix);\n\n\t\tif (isClosed) {\n\t\t\tconst anotherPillar = pillar.clone();\n\t\t\tanotherPillar.position.z += width\n\t\t\tanotherPillar.updateMatrix();\n\t\t\tpillarsGeometry.merge(anotherPillar.geometry, anotherPillar.matrix);\n\t\t};\n\n\t\tconst bar = new Mesh(new BoxGeometry(2, 2, width));\n\t\tbar.position.set(0, (gridHeight / 2) - 10, (width / 2));\n\t\tbar.updateMatrix();\n\n\t\tpillarsGeometry.merge(bar.geometry, bar.matrix);\n\n\t\tconst pillars = new Mesh(pillarsGeometry, materials.darkMetal);\n\t\tpillars.name = 'pillars';\n\t\tpillars.castShadow = true;\n\t\tpillars.receiveShadow = true;\n\n\n\t\t// helix\n\t\tconst helixGeometry = new Geometry();\n\n\t\tfor (let i = 0; i < (width / 2); i++) {\n\n\t\t\thelixGeometry.vertices.push(\n\t\t\t\tnew Vector3(\n\t\t\t\t\t10 * Math.cos(i),\n\t\t\t\t\t10 * Math.sin(i),\n\t\t\t\t\t2 * i\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\t\tconst helix = new Line(helixGeometry, materials.line);\n\t\thelix.name = 'helix';\n\n\t\thelix.castShadow = true;\n\t\thelix.receiveShadow = true;\n\t\thelix.position.set(-5, 40, 0);\n\n\n\t\t// mesh\n\t\tconst lineGeometry = new Geometry();\n\t\tconst step = width / 5;\n\n\t\tfor (let i = 0; i < width; i+=step) {\n\n\t\t\tconst diff = width - i;\n\n\t\t\tlineGeometry.vertices.push( new Vector3(0, 0, i) );\n\t\t\tlineGeometry.vertices.push( new Vector3(0, diff * Math.tan(angle), width) );\n\n\t\t};\n\n\t\tfor (let i = width; i > 0; i-=step) {\n\t\t\t\n\t\t\tconst diff = width - i;\n\n\t\t\tlineGeometry.vertices.push( new Vector3(0, gridHeight, diff) );\n\t\t\tlineGeometry.vertices.push( new Vector3(0, gridHeight - diff * Math.tan(angle), 0) );\n\n\t\t};\n\n\t\tfor (let i = 0; i < width; i+=step) {\n\t\t\t\n\t\t\tconst diff = width - i;\n\n\t\t\tlineGeometry.vertices.push( new Vector3(0, 0, diff) );\n\t\t\tlineGeometry.vertices.push( new Vector3(0, diff * Math.tan(angle), 0) );\n\n\t\t};\n\n\t\tfor (let i = 0; i < width; i+=step) {\n\t\t\t\n\t\t\tconst diff = width - i;\n\n\t\t\tlineGeometry.vertices.push( new Vector3(0, gridHeight, i) );\n\t\t\tlineGeometry.vertices.push( new Vector3(0, gridHeight - (diff * Math.tan(angle)), width) );\n\n\t\t};\n\n\t\tconst grid = new LineSegments(lineGeometry, materials.line);\n\t\tgrid.position.y -= (height / 2);\n\t\tgrid.castShadow = true;\n\t\tgrid.receiveShadow = true;\n\t\tgrid.name = 'grid';\n\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tpillars,\n\t\t\thelix,\n\t\t\tgrid\n\t\t);\n\t}\n}","import {\n\tObject3D,\n\tVector3,\n\tGeometry,\n\tLineSegments,\n\tBoxGeometry,\n\tMesh\n} from 'three';\n\n\nimport { materials } from '../../modules/materials';\n\n\nexport default class Filter {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'filter';\n\n\n\t\t// pillars\n\t\tconst pillarsGeometry = new Geometry();\n\n\t\tconst pillar = new Mesh(new BoxGeometry(5, 30, 390));\n\n\t\tconst anotherPillar = pillar.clone();\n\t\tanotherPillar.position.x -= 100;\n\t\tanotherPillar.updateMatrix();\n\n\t\tpillarsGeometry.merge(pillar.geometry, pillar.matrix);\n\t\tpillarsGeometry.merge(anotherPillar.geometry, anotherPillar.matrix);\n\n\t\tconst pillars = new Mesh(pillarsGeometry, materials.rust);\n\t\tpillars.castShadow = true;\n\t\tpillars.receiveShadow = true;\n\n\n\t\t// filter (lines)\n\t\tconst linesGeometry = new Geometry();\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\n\t\t\tlet y = i * 4;\n\n\t\t\tlinesGeometry.vertices.push( new Vector3(0, y, -40) );\n\t\t\tlinesGeometry.vertices.push( new Vector3(-100, y, -40 ) );\n\t\t};\n\n\t\tconst lines = new LineSegments(linesGeometry, materials.line);\n\t\tlines.castShadow = true;\n\t\tlines.receiveShadow = true;\n\n\n\t\tthis.mesh.add(\n\t\t\tpillars,\n\t\t\tlines\n\t\t);\n\t}\n}","import { Mesh, Object3D, Geometry, CylinderGeometry } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport { colors } from '../../modules/colors';\nimport { materials } from '../../modules/materials';\nimport PipeCorner from '../pipeCorner';\n\nimport Chimney from './chimney';\nimport Fence from './fence';\nimport Filter from './filter';\n\n\nexport default class BottomIsland {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'bottom-island';\n\n\t\t// big cube\n\t\tthis.mesh.add(\n\t\t\t(new Cube(\n\t\t\t\t[400, 400, 400],\n\t\t\t\t{x: 0, y: 0, z: 0},\n\t\t\t\tcolors.darkGrey)\n\t\t\t).mesh\n\t\t);\n\t\tthis.mesh.position.set(0, -400, 400);\n\n\n\t\t// chimney\n\t\tconst chimneyCombinedGeometry = new Geometry();\n\n\t\tconst chimneysParams = [\n\t\t\t{x: 120, y: 350, z: -120, scale: 150},\n\t\t\t{x: 135, y: 270, z: -90, scale: 70},\n\t\t\t{x: 95,  y: 245, z: -70, scale: 50},\n\t\t\t{x: 80,  y: 240, z: 70,  scale: 40},\n\t\t\t{x: 90,  y: 230, z: 100, scale: 30},\n\t\t\t{x: 120, y: 220, z: 80,  scale: 20},\n\t\t\t{x: -130, y: 320, z: -110, scale: 140},\n\t\t\t{x: -125, y: 270, z: -70, scale: 70},\n\t\t\t{x: -140, y: 500, z: 90, scale: 200}\n\t\t];\n\t\t\n\n\t\tfor (let i = 0; i < chimneysParams.length; i++) {\n\t\t\t\n\t\t\tconst chimney = (new Chimney()).mesh;\n\t\t\tchimney.position.set(\n\t\t\t\tchimneysParams[i].x,\n\t\t\t\tchimneysParams[i].y,\n\t\t\t\tchimneysParams[i].z,\n\t\t\t);\n\t\t\tchimney.scale.z = chimneysParams[i].scale;\n\t\t\tchimney.updateMatrix();\n\n\t\t\tchimneyCombinedGeometry.merge(chimney.geometry, chimney.matrix);\n\t\t};\n\n\n\t\t// big chimney!\n\t\tconst bigChimneyGeometry = new Geometry();\n\n\t\tconst chimneyInner = new Mesh(\n\t\t\tnew CylinderGeometry(40, 40, 70, 6, 1)\n\t\t);\n\t\tchimneyInner.position.set(0, -50, 0);\n\t\tchimneyInner.updateMatrix();\n\n\t\tconst chimneyOuter = (new Chimney()).mesh;\n\t\tchimneyOuter.scale.set(3.5, 3.5, 150); // XZY\n\t\tchimneyOuter.updateMatrix();\n\n\t\tbigChimneyGeometry.merge(chimneyInner.geometry, chimneyInner.matrix);\n\t\tbigChimneyGeometry.merge(chimneyOuter.geometry, chimneyOuter.matrix);\n\n\t\tconst bigChimney = new Mesh(bigChimneyGeometry, materials.rust);\n\n\t\tbigChimney.position.set(-125, 325, 90);\n\t\tbigChimney.updateMatrix();\n\n\t\t\n\t\tchimneyCombinedGeometry.merge(bigChimney.geometry, bigChimney.matrix);\n\n\t\tconst chimneyCombined = new Mesh(chimneyCombinedGeometry, materials.rust);\n\t\tchimneyCombined.castShadow = true;\n\t\tchimneyCombined.receiveShadow = true;\n\n\t\tthis.mesh.add(chimneyCombined);\n\n\n\n\t\t// pipe corners\n\t\tconst pipesParams = [\n\t\t\t{\n\t\t\t\tposition: { x: 0, y: 170, z: 195 },\n\t\t\t\trotation: { x: 0, y: (Math.PI / 2), z: 0 }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: 0, y: 0, z: 195 },\n\t\t\t\trotation: { x: 0, y: (Math.PI / 2), z: Math.PI }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: 215, y: -75, z: 10 },\n\t\t\t\trotation: { x: (Math.PI / 2), y: (Math.PI / 2), z: 0 }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: 215, y: -75, z: -20 },\n\t\t\t\trotation: { x: (Math.PI / 2), y: Math.PI, z: 0 }\n\t\t\t}\n\t\t];\n\n\t\tfor (let i = 0; i < pipesParams.length; i++) {\n\n\t\t\tconst pipeCorner = (new PipeCorner()).mesh;\n\t\t\t\n\t\t\tpipeCorner.position.set(\n\t\t\t\tpipesParams[i].position.x,\n\t\t\t\tpipesParams[i].position.y,\n\t\t\t\tpipesParams[i].position.z\n\t\t\t);\n\n\t\t\tpipeCorner.rotation.set(\n\t\t\t\tpipesParams[i].rotation.x,\n\t\t\t\tpipesParams[i].rotation.y,\n\t\t\t\tpipesParams[i].rotation.z,\n\t\t\t\t'ZYX'\n\t\t\t);\n\n\t\t\tthis.mesh.add(pipeCorner);\n\t\t};\n\n\n\t\t// fence\n\t\tconst fenceParams = [\n\t\t\t{\n\t\t\t\tposition: { x: 195, y: 245, z: -195 },\n\t\t\t\trotation: { x: 0, y: 0, z: 0 }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: 195, y: 245, z: (-195 + 130) },\n\t\t\t\trotation: { x: 0, y: 0, z: 0 }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: 195, y: 245, z: (-195 + 130 * 2) },\n\t\t\t\trotation: { x: 0, y: 0, z: 0 }\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tposition: { x: 195, y: 245, z: 195 },\n\t\t\t\trotation: { x: 0, y: (-Math.PI / 2), z: 0 },\n\t\t\t\tisClosed: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: (195 - 130 * 2), y: 245, z: 195 },\n\t\t\t\trotation: { x: 0, y: (-Math.PI / 2), z: 0 },\n\t\t\t\tisClosed: true\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tposition: { x: -195, y: 245, z: -195 },\n\t\t\t\trotation: { x: 0, y: 0, z: 0 }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: -195, y: 245, z: (-195 + 130) },\n\t\t\t\trotation: { x: 0, y: 0, z: 0 }\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: { x: -195, y: 245, z: (-195 + 130 * 2) },\n\t\t\t\trotation: { x: 0, y: 0, z: 0 }\n\t\t\t},\n\t\t];\n\n\t\tfor (let i = 0; i < fenceParams.length; i++) {\n\t\t\t\n\n\t\t\tconst fence = (new Fence(fenceParams[i].isClosed)).mesh;\n\n\t\t\tfence.position.set(\n\t\t\t\tfenceParams[i].position.x,\n\t\t\t\tfenceParams[i].position.y,\n\t\t\t\tfenceParams[i].position.z\n\t\t\t);\n\n\t\t\tfence.rotation.set(\n\t\t\t\tfenceParams[i].rotation.x,\n\t\t\t\tfenceParams[i].rotation.y,\n\t\t\t\tfenceParams[i].rotation.z\n\t\t\t);\n\n\t\t\tthis.mesh.add(fence);\n\t\t};\n\n\n\t\t// water filter\n\t\tconst filter = (new Filter()).mesh;\n\t\tfilter.position.set(50, 215, -5);\n\n\t\tthis.mesh.add(filter);\n\t}\n}","import { Geometry, Mesh, Object3D, CylinderGeometry, BoxGeometry } from 'three';\n\nimport { materials } from '../modules/materials';\n\n\nexport default class Fan {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'fan';\n\n\t\tconst staticGroupGeometry = new Geometry();\n\n\n\t\tconst base = new Mesh(\n\t\t\tnew CylinderGeometry(8, 8, 10, 6, 1)\n\t\t);\n\n\n\t\tconst pipe = new Mesh(\n\t\t\tnew CylinderGeometry(5, 5, 400, 6, 1)\n\t\t);\n\n\n\t\tconst engine = new Mesh(\n\t\t\tnew CylinderGeometry(25, 25, 50, 8, 1)\n\t\t);\n\t\tengine.rotation.x += Math.PI / 2;\n\t\tengine.position.y += 200;\n\t\tengine.updateMatrix();\n\n\n\t\tstaticGroupGeometry.merge(base.geometry, base.matrix);\n\t\tstaticGroupGeometry.merge(pipe.geometry, pipe.matrix);\n\t\tstaticGroupGeometry.merge(engine.geometry, engine.matrix);\n\n\t\tconst staticGroup = new Mesh(staticGroupGeometry, materials.darkMetal);\n\t\tstaticGroup.castShadow = true;\n\t\tstaticGroup.receiveShadow = true;\n\n\t\n\t\t// propeller\n\t\tconst propeller = new Object3D();\n\n\t\tconst hubGeometry = new CylinderGeometry(10, 10, 30, 6, 1);\n\t\tconst hub = new Mesh(hubGeometry, materials.darkMetal);\n\t\thub.receiveShadow = true;\n\t\thub.castShadow = true;\n\t\thub.position.z += 30;\n\t\thub.rotation.x = Math.PI / 2\n\n\t\t// blades\n\t\tlet blades = [];\n\t\tconst bladeGeometry = new BoxGeometry(20, 120, 2);\n\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tconst blade = new Mesh(bladeGeometry, materials.white);\n\n\t\t\tblade.geometry.translate( 0, 120 / 6, 0 );\n\n\t\t\tblade.geometry.vertices[4].y += 5;\n\t\t\tblade.geometry.vertices[4].z -= 1;\n\t\t\tblade.geometry.vertices[5].y += 5;\n\t\t\tblade.geometry.vertices[5].z -= 1;\n\n\t\t\tblade.rotation.z = i * (2 * Math.PI / 3);\n\t\t\tblade.position.z += 40;\n\n\t\t\tblade.castShadow = true;\n\t\t\tblade.receiveShadow = true;\n\n\t\t\tblades.push(blade);\n\t\t};\n\n\n\t\tpropeller.position.y += 200;\n\t\tpropeller.add(hub, ...blades);\n\n\t\tthis.propeller = propeller; // global for animation\n\t\n\t\t// final\n\t\tthis.mesh.add(staticGroup, propeller);\n\t}\n\n\trotate = (value) => {\n\t\tthis.propeller.rotation.z += value;\n\t}\n}","import { Geometry, Mesh } from 'three';\n\nimport Cube from '../modules/Cube';\n\nimport { materials } from '../modules/materials';\n\n\nexport default class Fence {\n\tconstructor(close = false) {\n\n\t\tconst singleGeometry = new Geometry();\n\n\n\t\tconst centerBoard = new Cube(\n\t\t\t[10, 20, 4],\n\t\t\t{x: 0, y: 0, z: 0}\n\t\t);\n\t\tcenterBoard.mesh.updateMatrix();\n\n\t\tconst topBoard = new Cube(\n\t\t\t[28, 4, 2],\n\t\t\t{x: -((28 / 2) + (10 / 2)), y: (10 - 4 / 2), z: 0}\n\t\t);\n\t\ttopBoard.mesh.updateMatrix();\n\n\t\tconst bottomBoard = new Cube(\n\t\t\t[28, 4, 2],\n\t\t\t{x: -((28 / 2) + (10 / 2)), y: -3, z: 0}\n\t\t);\n\t\tbottomBoard.mesh.updateMatrix();\n\n\t\tconst paling = new Cube(\n\t\t\t[10, 6, 4],\n\t\t\t{x: 0, y: 13, z: 0}\n\t\t);\n\n\t\tpaling.mesh.geometry.vertices[0].x -= 5;\n\t\tpaling.mesh.geometry.vertices[1].x -= 5;\n\t\tpaling.mesh.geometry.vertices[4].x += 5;\n\t\tpaling.mesh.geometry.vertices[5].x += 5;\n\t\tpaling.mesh.updateMatrix();\n\n\t\tsingleGeometry.merge(bottomBoard.mesh.geometry, bottomBoard.mesh.matrix);\n\t\tsingleGeometry.merge(centerBoard.mesh.geometry, centerBoard.mesh.matrix);\n\t\tsingleGeometry.merge(topBoard.mesh.geometry, topBoard.mesh.matrix);\n\t\tsingleGeometry.merge(paling.mesh.geometry, paling.mesh.matrix);\n\n\n\t\tthis.width = 38;\n\n\t\tthis.mesh = new Mesh(\n\t\t\tsingleGeometry,\n\t\t\tmaterials.wood\n\t\t);\n\n\t\tthis.mesh.position.y += 10;\n\t}\n}","import { Geometry, Mesh, Object3D, CylinderGeometry  } from 'three';\n\nimport { materials } from '../modules/materials';\n\n\nexport default class Pine {\n\tconstructor(scale = [1, 1, 1], rotation = 0) {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'pine';\n\n\t\t// tree trunk\n\t\tconst trunkGeometry = new CylinderGeometry(8, 8, 15, 10, 1);\n\n\t\tconst trunk = new Mesh(trunkGeometry, materials.wood);\n\t\ttrunk.castShadow = true;\n\t\ttrunk.receiveShadow = true;\n\t\ttrunk.position.y += 7.5;\n\n\n\t\t// branches\n\t\tconst branchesGeometry = new Geometry();\n\n\t\tfor (let i = 1; i <= 7; i++) {\n\t\t\tlet R = 45 - (i * 5); \n\t\t\tconst branchesLevel = new Mesh(new CylinderGeometry((R - 10), R, 10, 6, 1));\n\n\t\t\tbranchesLevel.position.y += 10 + (i * 70) / 7;\n\n\t\t\tbranchesLevel.updateMatrix();\n\n\t\t\tbranchesGeometry.merge(branchesLevel.geometry, branchesLevel.matrix);\n\t\t};\n\t\tconst branches = new Mesh(branchesGeometry, materials.green);\n\t\tbranches.receiveShadow = true;\n\t\tbranches.castShadow = true;\n\n\n\t\tthis.mesh.scale.x = scale[0];\n\t\tthis.mesh.scale.y = scale[1];\n\t\tthis.mesh.scale.z = scale[2];\n\n\t\tthis.mesh.rotation.y = rotation;\n\n\t\tthis.mesh.add(\n\t\t\ttrunk,\n\t\t\tbranches\n\t\t);\n\n\t}\n}","import { Geometry, Mesh, Object3D, CylinderGeometry, Shape, ExtrudeGeometry } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Windvane {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'windwane';\n\n\n\t\tconst standGeometry = new Geometry();\n\n\n\t\tconst pillarGeometry = new Geometry();\n\t\n\t\t{\n\t\t\tconst shaft\t= new Cube(\n\t\t\t\t[20, 200, 15],\n\t\t\t\t{x: 0, y: 100, z: 0}\n\t\t\t).mesh;\n\t\n\t\t\tshaft.geometry.vertices[0].x -= 5;\n\t\t\tshaft.geometry.vertices[0].z -= 5;\n\t\t\tshaft.geometry.vertices[1].x -= 5;\n\t\t\tshaft.geometry.vertices[1].z += 5;\n\t\t\tshaft.geometry.vertices[4].x += 5;\n\t\t\tshaft.geometry.vertices[4].z += 5;\n\t\t\tshaft.geometry.vertices[5].x += 5;\n\t\t\tshaft.geometry.vertices[5].z -= 5;\n\n\t\t\tshaft.updateMatrix();\n\t\t\t\n\t\t\tpillarGeometry.merge(shaft.geometry, shaft.matrix);\n\t\n\t\t\t// beams\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tconst beam = new Cube(\n\t\t\t\t\t[65, 10, 5],\n\t\t\t\t\t{\n\t\t\t\t\t\tx: -25,\n\t\t\t\t\t\ty: 30 + (j * 40),\n\t\t\t\t\t\tz: 0\n\t\t\t\t\t}\n\t\t\t\t).mesh;\n\t\n\t\t\t\tbeam.rotation.z += (Math.PI / 4) * ((j % 2 === 0) ? (-1) : 1);\n\t\t\t\tbeam.updateMatrix();\n\t\n\t\t\t\tpillarGeometry.merge(beam.geometry, beam.matrix);\n\t\t\t};\n\t\t};\n\n\t\tfor (let i = 0; i < 4; i++) {\n\n\t\t\tconst pillar = new Mesh(pillarGeometry, materials.wood);\n\t\t\tpillar.position.x += 40 * Math.cos(i * Math.PI / 2);\n\t\t\tpillar.position.z += 40 * Math.sin(i * Math.PI / 2);\n\n\t\t\tpillar.rotation.y += (Math.PI / 4) - i * (Math.PI / 2);\n\n\t\t\tpillar.updateMatrix();\n\n\t\t\tstandGeometry.merge(pillar.geometry, pillar.matrix);\n\t\t};\n\n\n\t\tconst platform = new Cube(\n\t\t\t[80, 10, 80],\n\t\t\t{x: 0, y: 200, z: 0},\n\t\t).mesh;\n\t\tplatform.rotation.y -= Math.PI / 4;\n\t\tplatform.updateMatrix();\n\n\t\tstandGeometry.merge(platform.geometry, platform.matrix);\n\n\n\t\t// \n\t\tconst stand = new Mesh(standGeometry, materials.wood);\n\t\tstand.name = 'stand';\n\t\tstand.castShadow = true;\n\t\tstand.receiveShadow = true;\n\t\tstand.rotation.y += Math.PI / 4;\n\n\n\t\t// \n\t\tconst vaneSupportGeometry = new Geometry();\n\n\t\t{\n\t\t\tconst bevel = new Mesh(new CylinderGeometry(2, 2, 60, 6, 1));\n\t\t\tbevel.rotation.z = Math.PI / 6;\n\t\t\tbevel.position.set(15, 230, 0);\n\t\t\tbevel.updateMatrix();\n\n\t\t\tconst anotherBevel = bevel.clone();\n\t\t\tanotherBevel.rotation.z = -Math.PI / 6;\n\t\t\tanotherBevel.position.x = -15;\n\t\t\tanotherBevel.updateMatrix();\n\n\t\t\tconst hub = new Mesh(new CylinderGeometry(4, 4, 6, 6, 1));\n\t\t\thub.position.set(0, 255, 0);\n\t\t\thub.updateMatrix();\n\n\t\t\tvaneSupportGeometry.merge(bevel.geometry, bevel.matrix);\n\t\t\tvaneSupportGeometry.merge(anotherBevel.geometry, anotherBevel.matrix);\n\t\t\tvaneSupportGeometry.merge(hub.geometry, hub.matrix);\n\t\t};\n\n\t\tconst vaneSupport = new Mesh(vaneSupportGeometry, materials.lightMetal);\n\t\tvaneSupport.castShadow = true;\n\t\tvaneSupport.receiveShadow = true;\n\n\n\t\tconst vane = new Object3D();\n\n\t\t{\n\t\t\t// axle\n\t\t\tconst axle = new Mesh(new CylinderGeometry(2, 2, 100, 6, 1), materials.lightMetal);\n\t\t\taxle.position.set(0, 260, 0);\n\t\t\taxle.rotation.x += Math.PI / 2;\n\t\t\taxle.receiveShadow = true;\n\t\t\taxle.castShadow = true;\n\n\n\t\t\t// hub\n\t\t\tconst hub = new Mesh(new CylinderGeometry(3, 3, 5, 6, 1), materials.lightMetal);\n\t\t\thub.position.set(0, 260, 0);\n\t\t\thub.receiveShadow = true;\n\t\t\thub.castShadow = true;\n\n\n\t\t\t// tail\n\t\t\tconst tailShape = new Shape();\n\t\t\tconst tailWidth = 36;\n\t\t\tconst tailHeight = 16;\n\t\t\ttailShape.moveTo(0, tailHeight / 2);\n\t\t\ttailShape.lineTo(tailWidth / 4, tailHeight);\n\t\t\ttailShape.lineTo(tailWidth, tailHeight);\n\t\t\ttailShape.lineTo(tailWidth - tailWidth / 4, tailHeight / 2);\n\t\t\ttailShape.lineTo(tailWidth, 0);\n\t\t\ttailShape.lineTo(tailWidth / 4, 0);\n\t\t\ttailShape.moveTo(0, tailHeight / 2);\n\n\t\t\tconst extrudeSettings = {\n\t\t\t\tsteps: 2,\n\t\t\t\tdepth: 4,\n\t\t\t\tbevelEnabled: false\n\t\t\t};\n\n\t\t\tconst tail = new Mesh(\n\t\t\t\tnew ExtrudeGeometry(tailShape, extrudeSettings),\n\t\t\t\tmaterials.red\n\t\t\t);\n\t\t\ttail.castShadow = true;\n\t\t\ttail.receiveShadow = true;\n\n\t\t\ttail.position.set(-2, 260 - (tailHeight / 2), -25);\n\t\t\ttail.rotation.y = Math.PI / 2;\n\n\n\t\t\t// windvane fan\n\t\t\tconst fan = new Object3D();\n\n\n\t\t\tconst fanBladesGeometry = new Geometry();\n\n\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\tconst blade = new Cube(\n\t\t\t\t\t[45, 2, 1],\n\t\t\t\t\t{\n\t\t\t\t\t\tx: 4 * Math.cos(i * (Math.PI / 6)),\n\t\t\t\t\t\ty: 4 * Math.sin(i * (Math.PI / 6)),\n\t\t\t\t\t\tz: 0\n\t\t\t\t\t}\n\t\t\t\t).mesh;\n\t\t\t\tblade.geometry.translate(20, 0, 0);\n\n\t\t\t\tblade.geometry.vertices[1].z -= 4;\n\t\t\t\tblade.geometry.vertices[1].y += 10;\n\n\t\t\t\tblade.rotation.z += i * Math.PI / 6;\n\t\t\t\tblade.updateMatrix();\n\n\t\t\t\tfanBladesGeometry.merge(blade.geometry, blade.matrix);\n\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // temp material\n\t\t\tconst fanBlades = new Mesh(fanBladesGeometry, materials.lightMetal);\n\t\t\tfanBlades.castShadow = true;\n\t\t\tfanBlades.receiveShadow = true;\n\n\n\t\t\t// fan center\n\t\t\tconst fanCenter = new Mesh(\n\t\t\t\tnew CylinderGeometry(4, 4, 4, 6, 1),\n\t\t\t\tmaterials.darkMetal\n\t\t\t);\n\t\t\tfanCenter.rotation.x = Math.PI / 2;\n\t\t\tfanCenter.castShadow = true;\n\t\t\tfanCenter.receiveShadow = true;\n\n\n\t\t\tfan.add(fanBlades, fanCenter);\n\t\t\tfan.position.set(0, 260, 45);\n\t\t\tthis.fan = fan;\n\n\t\t\t// final\n\t\t\tvane.add(axle, hub, tail, fan);\n\t\t};\n\n\t\tthis.vane = vane;\n\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tstand,\n\t\t\tvaneSupport,\n\t\t\tvane\n\t\t);\n\t}\n\n\trotateFan = (value) => {\n\t\tthis.fan.rotation.z += value;\n\t}\n}","import { Geometry, Mesh } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Ladder {\n\tconstructor() {\n\n\t\tconst ladderGeometry = new Geometry();\n\n\t\tconst pillar = new Cube(\n\t\t\t\t[5, 410, 5],\n\t\t\t\t{x: 0, y: 205, z: 0}\n\t\t).mesh;\n\n\t\tladderGeometry.merge(pillar.geometry, pillar.matrix);\n\n\t\tconst anotherPillar = pillar.clone();\n\t\tanotherPillar.position.z -= 30;\n\t\tanotherPillar.updateMatrix();\n\n\t\tladderGeometry.merge(anotherPillar.geometry, anotherPillar.matrix);\n\n\n\t\t// stairs\n\t\tfor (let i = 0; i < 40; i++) {\n\t\t\tconst stair = new Cube(\n\t\t\t\t[2, 2, 30],\n\t\t\t\t{x: 0, y: (i * 10) + 10, z: -15}\n\t\t\t).mesh;\n\n\t\t\tladderGeometry.merge(stair.geometry, stair.matrix);\n\t\t};\n\n\n\t\tthis.mesh = new Mesh(ladderGeometry, materials.wood);\n\t\tthis.mesh.castShadow = true;\n\t\tthis.mesh.receiveShadow = true;\n\n\t}\n};","import { Geometry, Mesh } from 'three';\n\nimport Cube from '../modules/Cube';\nimport { materials } from '../modules/materials';\n\n\nexport default class Stones {\n\tconstructor(coordinates = [ [0, 0, 0] ] ) {\n\n\t\tconst stonesGeometry = new Geometry();\n\n\t\tfor (let i = 0; i < coordinates.length; i++) {\n\t\t\tconst stone = new Cube(\n\t\t\t\t[30, 40, 30],\n\t\t\t\t{\n\t\t\t\t\tx: coordinates[i][0],\n\t\t\t\t\ty: coordinates[i][1],\n\t\t\t\t\tz: coordinates[i][2]\n\t\t\t\t}\n\t\t\t).mesh;\n\n\t\t\tstone.rotation.set(\n\t\t\t\tMath.random() * (2 * Math.PI),\n\t\t\t\tMath.random() * (2 * Math.PI),\n\t\t\t\tMath.random() * (2 * Math.PI)\n\t\t\t);\n\t\t\tstone.updateMatrix();\n\n\t\t\tstonesGeometry.merge(stone.geometry, stone.matrix);\n\t\t};\n\n\n\t\tthis.mesh = new Mesh(\n\t\t\tstonesGeometry,\n\t\t\tmaterials.lightMetal\n\t\t);\n\n\t\tthis.mesh.castShadow = true;\n\t\tthis.mesh.receiveShadow = true;\n\t}\n};","import { Object3D, Geometry, Mesh, CylinderGeometry } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport Fan from '../fan';\nimport Fence from '../fence';\nimport Pine from '../pine';\nimport Windvane from './Windvane';\nimport Ladder from './Ladder';\nimport Stones from '../stones';\n\nimport PipeCorner from '../pipeCorner';\nimport PipeConnection from '../pipeConnection';\n\nimport { colors } from '../../modules/colors';\nimport { materials } from '../../modules/materials';\n\n\nexport default class MiddleIsland {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'middle-island';\n\n\n\t\t// big cube\n\t\tthis.mesh.add(\n\t\t\t(new Cube(\n\t\t\t\t[400, 400, 400],\n\t\t\t\t{x: 0, y: 0, z: 0},\n\t\t\t\tcolors.lightBrown,\n\t\t\t\t'middle-cube-basement')\n\t\t\t).mesh\n\t\t);\n\n\n\t\t// fans\n\t\tthis.fans = [];\n\n\t\tconst fansParams = [\n\t\t\t{x: 200, y: 100, z: -100, rx: -Math.PI / 2, rz: -Math.PI / 2},\n\t\t\t{x: 200, y: -50, z: 100, rx: -Math.PI / 2, rz: -Math.PI / 2}\n\t\t];\n\n\t\tfor (let i = 0; i < fansParams.length; i++) {\n\t\t\tconst fan = new Fan();\n\t\t\tfan.mesh.position.set(\n\t\t\t\tfansParams[i].x,\n\t\t\t\tfansParams[i].y,\n\t\t\t\tfansParams[i].z\n\t\t\t);\n\t\t\tfan.mesh.rotation.set(\n\t\t\t\tfansParams[i].rx,\n\t\t\t\t0,\n\t\t\t\tfansParams[i].rz\n\t\t\t);\n\n\t\t\tthis.fans.push(fan);\n\t\t};\n\n\n\t\t// fence perimeter\n\t\tconst fenceParams = [\n\t\t\t{x: 190, z: -190, ry: 0, mx: -1, mz: 0, count: 11},\n\t\t\t{x: 190, z: 185, ry: -Math.PI / 2, mx: 0, mz: -1, count: 10},\n\t\t\t{x: -190, z: 190, ry: 0, mx: 1, mz: 0, count: 4},\n\t\t\t{x: 80, z: 185, ry: Math.PI, mx: 1, mz: 0, count: 3},\n\t\t];\n\t\tconst fenceWidth = 38;\n\t\tlet fenceGeometry = new Geometry();\n\n\t\tfor (let i = 0; i < fenceParams.length; i++) {\n\n\t\t\tfor(let j = 0; j < fenceParams[i].count; j++) {\n\n\t\t\t\tconst fence = (new Fence()).mesh;\n\t\t\t\tfence.position.set(\n\t\t\t\t\tfenceParams[i].x + (j * fenceParams[i].mx * fenceWidth),\n\t\t\t\t\t210,\n\t\t\t\t\tfenceParams[i].z + (j * fenceParams[i].mz * fenceWidth)\n\t\t\t\t);\n\t\t\t\tfence.rotation.y = fenceParams[i].ry;\n\t\t\t\tfence.updateMatrix();\n\n\t\t\t\tfenceGeometry.merge(fence.geometry, fence.matrix);\n\t\t\t};\n\n\t\t};\n\n\t\tconst fencePerimeter = new Mesh(fenceGeometry, materials.wood);\n\t\tfencePerimeter.name = 'fence-perimeter';\n\t\tfencePerimeter.castShadow = true;\n\t\tfencePerimeter.receiveShadow = true;\n\n\n\t\t// pine\n\t\tconst pine = new Pine([1.2, 2, 1.2]).mesh;\n\t\tpine.position.set(-140, 200, 140);\n\n\n\t\t// windvane\n\t\tconst windvane = new Windvane();\n\t\twindvane.mesh.position.set(100, 200, -50);\n\t\twindvane.mesh.rotation.y += Math.PI / 16;\n\n\t\tthis.windvane = windvane;\n\n\n\t\t// ladder\n\t\tconst ladder = new Ladder().mesh;\n\t\tladder.position.set(-158, 200, -90);\n\t\tladder.rotation.z = Math.PI / 32;\n\n\n\t\t// stones\n\t\tconst stonesCoordinates = [];\n\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tstonesCoordinates.push(\n\t\t\t\t[\n\t\t\t\t\t250 * Math.cos(i * Math.PI / 24),\n\t\t\t\t\t0,\n\t\t\t\t\t-180 * Math.sin(i * Math.PI / 24),\n\t\t\t\t]\n\t\t\t);\n\t\t};\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tstonesCoordinates.push(\n\t\t\t\t[\n\t\t\t\t\t150 * Math.cos(i * Math.PI / 16) + 10,\n\t\t\t\t\t0,\n\t\t\t\t\t-100 * Math.sin(i * Math.PI / 16),\n\t\t\t\t]\n\t\t\t);\n\t\t};\n\n\t\tconst stones = new Stones(stonesCoordinates).mesh;\n\t\tstones.position.set(-210, 200, 170);\n\n\n\t\t// back side pipes\n\t\tconst pipesGeometry = new Geometry();\n\t\tconst glassGeometry = new Geometry();\n\n\t\tconst pipesParams = [\n\t\t\t{\n\t\t\t\ttype: 'straight',\n\t\t\t\tposition: [80, -475, 125],\n\t\t\t\trotation: [(Math.PI / 2), 0, 0]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'connection',\n\t\t\t\tposition: [80, -475, 35],\n\t\t\t\trotation: [(Math.PI / 2), 0, 0],\n\t\t\t\toptions: {\n\t\t\t\t\tm: 1\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'arc',\n\t\t\t\tposition: [80, -397.5, 20],\n\t\t\t\trotation: [-(Math.PI / 2), (Math.PI / 2), -(Math.PI / 2)],\n\t\t\t\toptions: {\n\t\t\t\t\tscale: 1.1\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'connection',\n\t\t\t\tposition: [80, -300, -57.5],\n\t\t\t\trotation: [0, 0, 0],\n\t\t\t\toptions: {\n\t\t\t\t\tm: 8\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'straight',\n\t\t\t\tposition: [-275, -75, 80],\n\t\t\t\trotation: [0, 0, (Math.PI / 2)]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'connection',\n\t\t\t\tposition: [-360, -75, 80],\n\t\t\t\trotation: [0, 0, (Math.PI / 2)],\n\t\t\t\toptions: {\n\t\t\t\t\tm: 1\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'arc',\n\t\t\t\tposition: [-370, 0, 80],\n\t\t\t\trotation: [0, 0, (Math.PI / 2)],\n\t\t\t\toptions: {\n\t\t\t\t\tscale: 1.1\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'connection',\n\t\t\t\tposition: [-450, 150, 80],\n\t\t\t\trotation: [0, 0, 0],\n\t\t\t\toptions: {\n\t\t\t\t\tm: 4\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\tfor (let i = 0; i < pipesParams.length; i++) {\n\n\t\t\tlet pipe;\n\t\t\t\n\t\t\t// \n\t\t\tfunction setParams(el, params) {\n\t\t\t\tel.position.set(\n\t\t\t\t\tparams.position[0],\n\t\t\t\t\tparams.position[1],\n\t\t\t\t\tparams.position[2],\n\t\t\t\t);\n\t\t\t\tel.rotation.set(\n\t\t\t\t\tparams.rotation[0],\n\t\t\t\t\tparams.rotation[1],\n\t\t\t\t\tparams.rotation[2],\n\t\t\t\t);\n\t\t\t\tel.updateMatrix();\n\t\t\t};\n\n\t\t\tswitch (pipesParams[i].type) {\n\t\t\t\tcase 'straight':\n\t\t\t\t\tpipe = new Mesh(\n\t\t\t\t\t\tnew CylinderGeometry(35, 35, 150, 8, 1)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'connection':\n\t\t\t\t\tpipe = (new PipeConnection(pipesParams[i].options.m)).mesh;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'arc':\n\t\t\t\t\tpipe = (new PipeCorner(false, false)).mesh;\n\t\t\t\t\tpipe.scale.set(\n\t\t\t\t\t\tpipesParams[i].options.scale,\n\t\t\t\t\t\tpipesParams[i].options.scale,\n\t\t\t\t\t\tpipesParams[i].options.scale\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t};\n\t\t\tsetParams(pipe, pipesParams[i]);\n\n\t\t\tpipesGeometry.merge(pipe.geometry, pipe.matrix);\n\n\t\t};\n\n\t\tconst pipes = new Mesh(pipesGeometry, materials.lightMetal);\n\t\tpipes.castShadow = true;\n\t\tpipes.receiveShadow = true;\n\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tfencePerimeter,\n\t\t\tpine,\n\t\t\twindvane.mesh,\n\t\t\tladder,\n\t\t\tstones,\n\t\t\t...(this.fans.map(fan => fan.mesh)),\n\t\t\tpipes\n\t\t);\n\t\t\n\t}\n}","import {\n\tShape,\n\tCatmullRomCurve3,\n\tVector3,\n\tMesh,\n\tCylinderGeometry,\n\tExtrudeGeometry } from 'three';\n\n\nexport default class Chimney {\n\tconstructor(width, height, radius = 5, steps = 8) {\n\n\t\tthis.radius = radius;\n\n\t\tconst spline = new CatmullRomCurve3([\n\t\t\tnew Vector3(0, 0, 0),\n\t\t\tnew Vector3(0, 0, width),\n\t\t\tnew Vector3(0, height, width + radius),\n\t\t]\n\t\t);\n\t\t\n\t\tconst pipeShape = new Shape();\n\t\t\n\t\tpipeShape.moveTo(\n\t\t\tthis.radius * Math.cos(0),\n\t\t\tthis.radius * Math.sin(0)\n\t\t);\n\n\t\tfor (let i = 1; i < 16; i++) {\n\t\t\tpipeShape.lineTo(\n\t\t\t\tthis.radius * Math.cos(i * (2 * Math.PI) / 16),\n\t\t\t\tthis.radius * Math.sin(i * (2 * Math.PI) / 16)\n\t\t\t);\n\t\t};\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew ExtrudeGeometry(\n\t\t\t\tpipeShape,\n\t\t\t\t{\n\t\t\t\t\tcurveSegments \t: 8,\n\t\t\t\t\tsteps\t\t\t: steps,\n\t\t\t\t\tbevelEnabled\t: false,\n\t\t\t\t\textrudePath\t\t: spline\n\t\t\t\t}\n\t\t\t),\n\t\t);\n\t}\n}","import {\n\tGeometry,\n\tMesh,\n\tObject3D,\n\tCylinderGeometry,\n\tExtrudeGeometry,\n\tShape,\n\tPath\n} from 'three';\n\nimport Cube from '../../modules/Cube';\nimport Chimney from './chimney';\n\nimport { colors } from '../../modules/colors';\n\nimport { materials } from '../../modules/materials';\n\n\nexport default class House {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'house';\n\n\t\t// stage\n\t\tconst size = {\n\t\t\tx: 140,\n\t\t\ty: 50,\n\t\t\tz: 140\n\t\t};\n\n\t\t// first floor\n\t\tconst firstFloor = new Cube(\n\t\t\t[size.x, size.y, size.z],\n\t\t\t{x: 0, y: (size.y / 2), z: -100},\n\t\t\tcolors.brick,\n\t\t\t'first-floor'\n\t\t).mesh;\n\t\tfirstFloor.castShadow = true;\n\t\tfirstFloor.receiveShadow = true;\n\n\t\t// basement\n\t\tconst basement = new Cube(\n\t\t\t[size.x + 10, size.y / 10, size.z + 10],\n\t\t\t{x: 0, y: (size.y / 20), z: -100},\n\t\t\tcolors.darkMetal,\n\t\t\t'basement'\n\t\t).mesh;\n\t\tbasement.castShadow = true;\n\t\tbasement.receiveShadow = true;\n\n\t\t// roof\n\t\tconst roof = new Object3D();\n\n\t\tconst roofLow = new Mesh(\n\t\t\tnew CylinderGeometry( (size.x - 40), (size.x - 35), 5, 4, 1 ),\n\t\t\tmaterials.brick\n\t\t);\n\t\troofLow.position.y -= 2.5;\n\t\troofLow.castShadow = true;\n\t\troofLow.receiveShadow = true;\n\n\t\tconst roofMiddle = new Mesh(\n\t\t\tnew CylinderGeometry( 20, 20, 5, 4, 1 ),\n\t\t\tmaterials.brick\n\t\t);\n\t\troofMiddle.position.y += 122.5;\n\t\troofMiddle.castShadow = true;\n\t\troofMiddle.receiveShadow = true;\n\n\t\tconst roofTop = new Mesh(\n\t\t\tnew CylinderGeometry( 15, 15, 5, 4, 1 ),\n\t\t\tmaterials.brick\n\t\t);\n\t\troofTop.position.y += 155;\n\t\troofTop.castShadow = true;\n\t\troofTop.receiveShadow = true;\n\n\n\n\t\troof.add(\n\t\t\troofLow,\n\t\t\troofMiddle,\n\t\t\troofTop\n\t\t);\n\t\troof.position.set(0, size.y, -100),\n\t\troof.rotation.y += Math.PI / 4;\n\n\t\t\n\t\t// roof parts\n\t\tconst roofCombinedGeometry = new Geometry();\n\n\t\tconst roofParams = [\n\t\t\t{ y: 20,  rT: 50, rB: 100, height: 40 },\n\t\t\t{ y: 70,  rT: 20, rB: 50,  height: 60 },\n\t\t\t{ y: 110, rT: 15, rB: 20,  height: 20 },\n\t\t\t{ y: 130, rT: 30, rB: 15,  height: 10 },\n\t\t\t{ y: 145, rT: 10, rB: 30,  height: 20 },\n\t\t\t{ y: 165, rT: 1,  rB: 10,  height: 20 },\n\t\t];\n\n\t\tfor (let i = 0; i < roofParams.length; i++) {\n\t\t\tconst roofPart = new Mesh(\n\t\t\t\tnew CylinderGeometry(\n\t\t\t\t\troofParams[i].rT,\n\t\t\t\t\troofParams[i].rB,\n\t\t\t\t\troofParams[i].height,\n\t\t\t\t\t4, 1\n\t\t\t\t),\n\t\t\t);\n\t\t\troofPart.position.y += roofParams[i].y;\n\t\t\troofPart.updateMatrix();\n\t\t\troofCombinedGeometry.merge(roofPart.geometry, roofPart.matrix);\n\t\t};\n\n\t\tconst roofCombined = new Mesh(roofCombinedGeometry, materials.roof);\n\t\troofCombined.castShadow = true;\n\t\troofCombined.receiveShadow = true;\n\n\t\troof.add(roofCombined);\n\n\t\t\n\t\t// chimneys\n\t\tconst chimneyCombinedGeometry = new Geometry();\n\n\t\tconst chimneyParams = [\n\t\t\t{ x: 0, y: 100, z: -70, width: 30, height: 50 },\n\t\t\t{ x: -10, y: 120, z: -80, width: 20, height: 80 }\n\t\t];\n\n\t\tfor (let i = 0; i < chimneyParams.length; i++) {\n\t\t\tconst chimney = (new Chimney(\n\t\t\t\tchimneyParams[i].width,\n\t\t\t\tchimneyParams[i].height\n\t\t\t)).mesh;\n\t\t\tchimney.position.set(\n\t\t\t\tchimneyParams[i].x,\n\t\t\t\tchimneyParams[i].y,\n\t\t\t\tchimneyParams[i].z\n\t\t\t);\n\t\t\tchimney.updateMatrix();\n\t\n\t\t\tchimneyCombinedGeometry.merge(chimney.geometry, chimney.matrix);\n\t\t};\n\n\t\tconst chimneyCombined = new Mesh(\n\t\t\tchimneyCombinedGeometry, materials.lightMetal\n\t\t);\n\t\tchimneyCombined.castShadow = true;\n\t\tchimneyCombined.receiveShadow = true;\n\n\n\t\t// door\n\t\tconst doorShape = new Shape();\n\n\t\tdoorShape.moveTo(15, -15);\n\t\tdoorShape.lineTo(15, 15);\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tdoorShape.lineTo(\n\t\t\t\t15 * Math.cos( i * Math.PI / 8 ),\n\t\t\t\t10 * Math.sin( i * Math.PI / 8 ) + 15\n\t\t\t);\n\t\t};\n\n\t\tdoorShape.lineTo(-15, -15);\n\t\tdoorShape.moveTo(-15, 15);\n\n\t\tconst extrudeSettings = {\n\t\t\tsteps: 2,\n\t\t\tdepth: 4,\n\t\t\tbevelEnabled: false\n\t\t};\n\n\t\tconst door = new Mesh(\n\t\t\tnew ExtrudeGeometry(doorShape, extrudeSettings),\n\t\t\tmaterials.wood\n\t\t);\n\t\tdoor.castShadow = true;\n\t\tdoor.receiveShadow = true;\n\n\t\tdoor.position.set(70, 15, -125);\n\t\tdoor.rotation.y = Math.PI / 2;\n\n\n\t\t// window\n\t\tconst windowShape = new Shape();\n\t\twindowShape.moveTo(0, 0);\n\t\twindowShape.absarc(0, 0, 15, 0, Math.PI * 2);\n\n\t\tconst holePath = new Path();\n\t\tholePath.moveTo(0, 0);\n\t\tholePath.absarc(0, 0, 12, 0, Math.PI * 2);\n\t\twindowShape.holes.push( holePath );\n\n\t\tconst windowGeometry = new ExtrudeGeometry(\n\t\t\twindowShape,\n\t\t\t{\n\t\t\t\tdepth: 4,\n\t\t\t\tsteps: 1,\n\t\t\t\tbevelEnabled: false\n\t\t\t}\n\t\t);\n\n\t\tconst horizontalFrame = new Cube([1, 30, 4]);\n\t\tconst verticalFrame = new Cube([30, 1, 4]);\n\n\t\twindowGeometry.merge(horizontalFrame.geometry, horizontalFrame.matrix);\n\t\twindowGeometry.merge(verticalFrame.geometry, verticalFrame.matrix);\n\t\t\n\t\tconst houseWindow = new Mesh(windowGeometry, materials.wood);\n\t\thouseWindow.position.set(70, 25, -65);\n\t\thouseWindow.rotation.y = Math.PI / 2;\n\t\thouseWindow.scale.x = 1.15\n\n\t\thouseWindow.receiveShadow = true;\n\t\thouseWindow.castShadow = true;\n\n\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tbasement,\n\t\t\tfirstFloor,\n\t\t\tdoor,\n\t\t\thouseWindow,\n\t\t\troof,\n\t\t\tchimneyCombined\n\t\t);\n\t}\n}","import { Object3D, Mesh, Geometry, MeshPhongMaterial } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport Fence from '../fence';\nimport Fan from '../fan';\nimport Pine from '../pine';\nimport PipeCorner from '../pipeCorner';\nimport House from './House';\n\nimport { colors } from '../../modules/colors';\nimport { materials } from '../../modules/materials';\n\n\nexport default class TopIsland {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'top-island';\n\n\t\t// big cube\n\t\tthis.mesh.add(\n\t\t\t(new Cube(\n\t\t\t\t[400, 400, 400],\n\t\t\t\t{ x: 0, y: 0, z: 0 },\n\t\t\t\tcolors.lightGreen)\n\t\t\t).mesh\n\t\t);\n\n\n\t\t// fans\n\t\tthis.fans = [];\n\n\t\tconst fansParams = [\n\t\t\t{ x: -100, y: 100 },\n\t\t\t{ x: 100, y: -100 }\n\t\t];\n\n\t\tfor (let i = 0; i < fansParams.length; i++) {\t\n\t\t\tconst fan = new Fan();\n\t\t\tfan.mesh.position.set(\n\t\t\t\tfansParams[i].x,\n\t\t\t\tfansParams[i].y,\n\t\t\t\t200\n\t\t\t);\n\t\t\tfan.mesh.rotation.set(\n\t\t\t\tMath.PI / 2,\n\t\t\t\tMath.PI,\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fans.push(fan);\n\t\t};\n\n\t\tthis.fans.map(fan => {\n\t\t\tthis.mesh.add(fan.mesh)\n\t\t});\n\n\n\t\t// house\n\t\tconst house = (new House()).mesh;\n\t\thouse.position.x += 70;\n\t\thouse.position.y += 200;\n\t\thouse.position.z += 5;\n\t\thouse.rotation.y -= Math.PI / 16;\n\n\t\tthis.mesh.add(\n\t\t\thouse\n\t\t);\n\n\n\t\t// fence perimeter\n\t\tlet fenceGeometry = new Geometry();\n\n\t\tconst fenceParams = [\n\t\t\t{x: 190, z: 187, ry: 0, mx: -1, mz: 0, count: 10},\n\t\t\t{x: -187, z: 185, ry: -Math.PI / 2, mx: 0, mz: -1, count: 10},\n\t\t\t{x: -187, z: -187, ry: Math.PI, mx: 1, mz: 0, count: 10},\n\t\t\t{x: 190, z: 118, ry: Math.PI / 2, mx: 0, mz: 1, count: 2},\n\t\t\t{x: 187, z: -155, ry: -Math.PI / 2, mx: 0, mz: -1, count: 1},\n\t\t];\n\t\tconst fenceWidth = 38;\n\n\t\tfor (let i = 0; i < fenceParams.length; i++) {\n\n\t\t\tfor(let j = 0; j < fenceParams[i].count; j++) {\n\n\t\t\t\tconst fence = (new Fence()).mesh;\n\t\t\t\tfence.position.set(\n\t\t\t\t\tfenceParams[i].x + (j * fenceParams[i].mx * fenceWidth),\n\t\t\t\t\t210,\n\t\t\t\t\tfenceParams[i].z + (j * fenceParams[i].mz * fenceWidth)\n\t\t\t\t);\n\t\t\t\tfence.rotation.y = fenceParams[i].ry;\n\t\t\t\tfence.updateMatrix();\n\n\t\t\t\tfenceGeometry.merge(fence.geometry, fence.matrix);\n\t\t\t};\n\n\t\t};\n\n\t\tconst fencePerimeter = new Mesh(fenceGeometry, materials.wood);\n\t\tfencePerimeter.name = 'fence-perimeter';\n\t\tfencePerimeter.castShadow = true;\n\t\tfencePerimeter.receiveShadow = true;\n\n\t\tthis.mesh.add(\n\t\t\tfencePerimeter\n\t\t);\n\n\n\t\t// pines\n\t\tconst pineParams = [\n\t\t\t{ x: 120, y: 200, z: 140, sx: 1, sy: 1, sz: 1 },\n\t\t\t{ x: 15, y: 200, z: 140, sx: 1, sy: 1.2, sz: 1 },\n\t\t\t{ x: -100, y: 200, z: 140, sx: 1.1, sy: 1.5, sz: 1.1 },\n\t\t\t{ x: -90, y: 200, z: -80, sx: 1.6, sy: 1.8, sz: 1.6 },\n\t\t];\n\n\t\tfor (let i = 0; i < pineParams.length; i++) {\n\t\t\tconst pine = (new Pine([\n\t\t\t\tpineParams[i].sx,\n\t\t\t\tpineParams[i].sy,\n\t\t\t\tpineParams[i].sz\n\t\t\t])).mesh;\n\t\t\tpine.position.set(\n\t\t\t\tpineParams[i].x,\n\t\t\t\tpineParams[i].y,\n\t\t\t\tpineParams[i].z\n\t\t\t);\n\n\t\t\tthis.mesh.add(pine);\n\t\t};\n\n\n\t\t// pipe corner\n\t\tconst pipeCorner = (new PipeCorner()).mesh;\n\t\tpipeCorner.position.x -= 60;\n\t\tpipeCorner.position.y += 215;\n\t\tpipeCorner.position.z += 40;\n\n\t\tthis.mesh.add(pipeCorner);\n\n\t\tthis.mesh.position.set(-400, 400, 0);\n\t}\n}","import {\n\tVector2,\n\tMesh,\n\tGeometry,\n\tExtrudeGeometry,\n\tLatheGeometry,\n\tShape,\n\tObject3D,\n\tEdgesGeometry,\n\tLineBasicMaterial,\nLineSegments } from 'three';\n\nimport { materials } from '../../modules/materials';\n\n\nexport default class Balloon {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'zeppelin-balloon';\n\n\t\tconst radius = 200;\n\t\tconst pointsCount = 12;\n\n\n\t\t// points\n\t\tconst points = [];\n\t\tfor (let i = 0; i < pointsCount; i++) {\n\t\t\tpoints.push(\n\t\t\t\tnew Vector2(\n\t\t\t\t\tradius * Math.sin( i * (Math.PI / pointsCount) ),\n\t\t\t\t\tradius * Math.cos( i * (Math.PI / pointsCount) ) * 2\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\n\t\n\t\t// balloon\n\t\tconst balloon = new Mesh(\n\t\t\tnew LatheGeometry( points ),\n\t\t\tmaterials.balloon\n\t\t);\n\t\t// balloon.castShadow = true;\n\t\tballoon.receiveShadow = true;\n\n\n\n\t\t// frame\n\t\tconst frameShape = new Shape();\n\t\tframeShape.moveTo( points[0].y, points[0].x );\n\n\t\tfor (let i = 1; i < (points.length - 1); i++) {\n\t\n\t\t\tframeShape.lineTo( points[i].y, points[i].x );\n\t\n\t\t};\n\t\tframeShape.moveTo( points[points.length] );\n\n\t\tconst frame = new Mesh(\n\t\t\tnew ExtrudeGeometry(\n\t\t\t\tframeShape,\n\t\t\t\t{\n\t\t\t\t\tsteps: 1,\n\t\t\t\t\tdepth: 20,\n\t\t\t\t\tbevelEnabled: false\n\t\t\t\t}\n\t\t\t),\n\t\t\tmaterials.lightMetal\n\t\t);\n\t\t// frame.rotation.y += Math.PI / 6;\n\t\tframe.rotation.z -= Math.PI / 2;\n\t\tframe.position.set(5, 0, -10);\n\n\t\tframe.castShadow = true;\n\t\tframe.receiveShadow = true;\n\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tballoon,\n\t\t\tframe\n\t\t);\n\n\t\tthis.mesh.rotation.x = Math.PI / 2;\n\n\t}\n}","import {\n\tShape,\n\tCatmullRomCurve3,\n\tMesh,\n\tExtrudeGeometry } from 'three';\n\n\nexport default class Hose {\n\tconstructor(radius, points, steps = 15) {\n\n\t\tthis.radius = radius;\n\t\t\n\t\tconst spline = new CatmullRomCurve3( points );\n\t\t\n\t\tconst shape = new Shape();\n\t\t\n\t\tshape.moveTo(\n\t\t\tthis.radius * Math.cos(0),\n\t\t\tthis.radius * Math.sin(0)\n\t\t);\n\n\t\tfor (let i = 1; i < 16; i++) {\n\t\t\tshape.lineTo(\n\t\t\t\tthis.radius * Math.cos(i * (2 * Math.PI) / 16),\n\t\t\t\tthis.radius * Math.sin(i * (2 * Math.PI) / 16)\n\t\t\t);\n\t\t};\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew ExtrudeGeometry(\n\t\t\t\tshape,\n\t\t\t\t{\n\t\t\t\t\tsteps\t\t\t: steps,\n\t\t\t\t\tbevelEnabled\t: false,\n\t\t\t\t\textrudePath\t\t: spline\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tthis.mesh.name = 'hose';\n\t}\n}","import {\n\tObject3D,\n\tMesh,\n\tGeometry,\n\tCylinderGeometry,\n\tLatheGeometry,\n\tVector2,\n\tVector3,\n\tShape,\n\tExtrudeGeometry,\n\tMatrix4 } from 'three';\n\nimport Hose from './hose';\nimport Cube from '../../modules/Cube';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Fan {\n\tconstructor(full = true, mirrored = false) {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'zeppelin-fan';\n\n\n\t\t\n\t\t// engine\n\t\tconst engineRadius = 40;\n\t\tconst engineGeometry = new Geometry();\n\t\t\n\t\tconst engineMain = new Mesh(\n\t\t\tnew CylinderGeometry(engineRadius, engineRadius - 5, (engineRadius * 2), 16, 1)\n\t\t);\n\n\t\tconst engineTopPoints = [];\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tengineTopPoints.push(\n\t\t\t\tnew Vector2(\n\t\t\t\t\tengineRadius * Math.cos( i * (Math.PI / 32) ),\n\t\t\t\t\tengineRadius * Math.sin( i * (Math.PI / 32) ) / 3\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\t\tconst engineTop = new Mesh(\n\t\t\tnew LatheGeometry( engineTopPoints, 8 ),\n\t\t);\n\t\tengineTop.position.y += engineRadius;\n\t\tengineTop.updateMatrix();\n\n\n\t\tconst engineTier = new Mesh(\n\t\t\tnew CylinderGeometry(5, 5, 120, 6, 1)\n\t\t);\n\t\tengineTier.position.set( -60, 0, 0 )\n\t\tengineTier.rotation.z -= Math.PI / 2;\n\t\tengineTier.updateMatrix();\n\n\n\t\tif (full) {\n\t\t\t// engine air flow grid\n\t\t\tconst sideLeft = (new Cube( [15, 45, 1] )).mesh;\n\t\t\tsideLeft.position.set(35, 5, 15);\n\t\t\tsideLeft.updateMatrix();\n\n\t\t\tconst sideRight = sideLeft.clone();\n\t\t\tsideLeft.position.z -= 30;\n\t\t\tsideLeft.updateMatrix();\n\n\t\t\tengineGeometry.merge(sideLeft.geometry, sideLeft.matrix);\n\t\t\tengineGeometry.merge(sideRight.geometry, sideRight.matrix);\n\n\t\t\tfor (let i = -2; i < 4; i++) {\n\t\t\t\tlet engineSegment = new Mesh(\n\t\t\t\t\tnew CylinderGeometry(4, 4, 30, 3, 1)\n\t\t\t\t);\n\t\t\t\tengineSegment.rotation.set(Math.PI / 2, Math.PI / 3, 0);\n\t\t\t\tengineSegment.position.set(\n\t\t\t\t\t(engineRadius + i / 2 - 2),\n\t\t\t\t\t(i * 8),\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\tengineSegment.updateMatrix();\n\t\n\t\t\t\tengineGeometry.merge(engineSegment.geometry, engineSegment.matrix);\n\t\t\t};\n\n\t\t\t// hose\n\t\t\tlet m = (mirrored) ? (-1) : 1;\n\t\t\t\n\t\t\tconst hose = new Hose(4, [\n\t\t\t\tnew Vector3(-10, 28, m * 35),\n\t\t\t\tnew Vector3(0, 5, m * 50),\n\t\t\t\tnew Vector3(10, -4, m * 55),\n\t\t\t\tnew Vector3(20, -8, m * 50),\n\t\t\t\tnew Vector3(24, -12, m * 40),\n\t\t\t\tnew Vector3(20, -16, m * 25),\n\t\t\t]).mesh;\n\n\t\t\tengineGeometry.merge(hose.geometry, hose.matrix);\n\t\t};\n\n\t\tconst engineHub = new Mesh(\n\t\t\tnew CylinderGeometry(5, 10, 15, 6, 1, true)\n\t\t);\n\t\tengineHub.position.y += 58;\n\t\tengineHub.updateMatrix();\n\n\n\t\tengineGeometry.merge(engineMain.geometry, engineMain.matrix);\n\t\tengineGeometry.merge(engineTop.geometry, engineTop.matrix);\n\t\tengineGeometry.merge(engineTier.geometry, engineTier.matrix);\n\t\tengineGeometry.merge(engineHub.geometry, engineHub.matrix);\n\n\t\tconst engine = new Mesh(engineGeometry, materials.lightMetal);\n\t\tengine.castShadow = true;\n\t\tengine.receiveShadow = true;\n\n\n\n\t\t// propeller\n\t\tconst propellerGeometry = new Geometry();\n\n\t\tconst pipe = new Mesh(\n\t\t\tnew CylinderGeometry(4, 4, 280, 6, 1)\n\t\t);\n\t\tpipe.position.set(0, 100, 0);\n\t\tpipe.updateMatrix();\n\n\n\t\tconst bladesHub = new Mesh(\n\t\t\tnew CylinderGeometry(12, 5, 10, 6, 1)\n\t\t);\n\t\tbladesHub.position.set(0, 228, 0);\n\t\tbladesHub.updateMatrix();\n\n\n\t\tconst bladesGeometry = new Geometry();\n\n\t\tconst bladeShape = new Shape();\n\n\t\tbladeShape.moveTo(0, -5);\n\t\tfor (let i = -4; i < 4; i++) {\n\t\t\tbladeShape.lineTo(\n\t\t\t\t120 + 10 * Math.cos(i * Math.PI / 8),\n\t\t\t\t10 * Math.sin(i * Math.PI / 8)\n\t\t\t);\n\t\t};\n\t\tbladeShape.lineTo(0, 5);\n\n\t\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tlet blade = new Mesh(\n\t\t\t\tnew ExtrudeGeometry(\n\t\t\t\t\tbladeShape,\n\t\t\t\t\t{\n\t\t\t\t\t\tcurveSegments: 8,\n\t\t\t\t\t\tsteps: 1,\n\t\t\t\t\t\tdepth: 2,\n\t\t\t\t\t\tbevelEnabled: false\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t\tblade.rotation.z += i * (Math.PI / 2);\n\t\t\tblade.updateMatrix();\n\n\t\t\tbladesGeometry.merge(blade.geometry, blade.matrix);\n\t\t}\n\n\t\tconst blades = new Mesh(bladesGeometry, materials.white);\n\t\tblades.position.set(0, 235, 0);\n\t\tblades.geometry.applyMatrix( new Matrix4().makeRotationX( Math.PI / 2 ) );\n\t\tblades.updateMatrix();\n\n\n\n\t\tpropellerGeometry.merge(pipe.geometry, pipe.matrix);\n\t\tpropellerGeometry.merge(bladesHub.geometry, bladesHub.matrix);\n\t\tpropellerGeometry.merge(blades.geometry, blades.matrix);\n\n\t\tthis.propeller = new Mesh(propellerGeometry, materials.white);\n\t\tthis.propeller.castShadow = true;\n\t\tthis.propeller.receiveShadow = true;\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tengine,\n\t\t\tthis.propeller\n\t\t);\n\t}\n\n\trotate = (value) => {\n\t\tthis.propeller.rotation.y += value\n\t}\n}","import {\n\tMesh,\n\tGeometry,\n\tCylinderGeometry,\n\tLatheGeometry,\n\tVector2 } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Tanks {\n\tconstructor() {\n\n\t\tconst tanksGeometry = new Geometry();\n\n\n\t\t// single tank\n\t\tconst tankGeometry = new Geometry();\n\t\tconst tankRadius = 30;\n\n\n\t\tconst tankCenter = new Mesh(\n\t\t\tnew CylinderGeometry(tankRadius, tankRadius, 70, 16, 1)\n\t\t);\n\n\t\tconst tankTopPoints = [];\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\ttankTopPoints.push(\n\t\t\t\tnew Vector2(\n\t\t\t\t\ttankRadius * Math.cos( i * (Math.PI / 32) ),\n\t\t\t\t\ttankRadius * Math.sin( i * (Math.PI / 32) ) / 2\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\t\tconst tankTop = new Mesh(\n\t\t\tnew LatheGeometry( tankTopPoints, 12 ),\n\t\t);\n\t\ttankTop.position.y = 35;\n\t\ttankTop.updateMatrix();\n\n\t\tconst tankBottom = tankTop.clone();\n\t\ttankBottom.rotation.z += Math.PI;\n\t\ttankBottom.position.y = -35;\n\t\ttankBottom.updateMatrix();\n\n\t\tconst tankHub = new Mesh(new CylinderGeometry(8, 8, 10, 8, 1));\n\t\ttankHub.position.y += 50;\n\t\ttankHub.updateMatrix();\n\n\t\ttankGeometry.merge(tankCenter.geometry, tankCenter.matrix);\n\t\ttankGeometry.merge(tankTop.geometry, tankTop.matrix);\n\t\ttankGeometry.merge(tankBottom.geometry, tankBottom.matrix);\n\t\ttankGeometry.merge(tankHub.geometry, tankHub.matrix);\n\n\n\t\t// tank merge\n\t\tconst tankLeft = new Mesh(tankGeometry);\n\t\ttankLeft.position.z += 35;\n\t\ttankLeft.updateMatrix();\n\n\t\tconst tankRight = tankLeft.clone();\n\t\ttankRight.position.z -= 70;\n\t\ttankRight.updateMatrix();\n\n\n\t\t// frame\n\t\tconst frame = (new Cube( [5, 4, 80] )).mesh;\n\t\tframe.position.y += 52;\n\t\tframe.updateMatrix();\n\n\n\t\t// tier\n\t\tconst tier = new Mesh(\n\t\t\tnew CylinderGeometry(2, 2, 120, 6, 1)\n\t\t);\n\t\ttier.position.set( -60, 52, 0 )\n\t\ttier.rotation.z -= Math.PI / 2;\n\t\ttier.updateMatrix();\n\n\n\t\ttanksGeometry.merge(tankLeft.geometry, tankLeft.matrix);\n\t\ttanksGeometry.merge(tankRight.geometry, tankRight.matrix);\n\t\ttanksGeometry.merge(frame.geometry, frame.matrix);\n\t\ttanksGeometry.merge(tier.geometry, tier.matrix);\n\t\t\n\t\tthis.mesh = new Mesh(tanksGeometry, materials.lightMetal);\n\t\tthis.mesh.name = 'fuel-tanks';\n\t\tthis.mesh.castShadow = true;\n\t\tthis.mesh.receiveShadow = true;\n\t}\n}","import {\n\tGeometry,\n\tExtrudeGeometry,\n\tCylinderGeometry,\n\tMesh,\n\tObject3D,\n\tShape,\n\tPath } from 'three';\n\nimport Cube from '../../modules/Cube';\nimport { materials } from '../../modules/materials';\n\n\nexport default class Turbine {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'turbine';\n\n\t\tconst turbineGeometry = new Geometry();\n\n\t\n\t\tconst turbineOuterShape = new Shape();\n\t\tturbineOuterShape.moveTo(0, 0);\n\t\tturbineOuterShape.absarc(0, 0, 60, 0, Math.PI * 2);\n\n\t\tconst holePath = new Path();\n\t\tholePath.moveTo(0, 0);\n\t\tholePath.absarc(0, 0, 55, 0, Math.PI * 2);\n\t\tturbineOuterShape.holes.push( holePath );\n\n\t\tconst turbineOuter = new Mesh(\n\t\t\tnew ExtrudeGeometry(\n\t\t\t\tturbineOuterShape,\n\t\t\t\t{\n\t\t\t\t\tdepth: 80,\n\t\t\t\t\tsteps: 1,\n\t\t\t\t\tbevelEnabled: false\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tturbineOuter.position.z -= 40\n\t\tturbineOuter.updateMatrix();\n\n\n\t\t// pipe\n\t\tconst pipe = (new Cube(\n\t\t\t[150, 5, 30],\n\t\t\t{x: -130, y: 0, z: 0}\n\t\t)).mesh;\n\n\n\t\t// engine support\n\t\tconst engineSupport = (new Cube(\n\t\t\t[118, 5, 10]\n\t\t)).mesh;\n\t\tengineSupport.rotation.z += Math.PI / 4;\n\t\tengineSupport.updateMatrix();\n\n\n\t\tconst engine = new Mesh(\n\t\t\tnew CylinderGeometry(20, 20, 50, 8, 1)\n\t\t);\n\t\tengine.rotation.x += Math.PI / 2;\n\t\tengine.updateMatrix();\n\n\n\n\t\tturbineGeometry.merge(turbineOuter.geometry, turbineOuter.matrix);\n\t\tturbineGeometry.merge(pipe.geometry, pipe.matrix);\n\t\tturbineGeometry.merge(engineSupport.geometry, engineSupport.matrix);\n\t\tturbineGeometry.merge(engine.geometry, engine.matrix);\n\n\t\tconst turbine = new Mesh(turbineGeometry, materials.darkMetal);\n\t\tturbine.castShadow = true;\n\t\tturbine.receiveShadow = true;\n\n\n\t\t// propeller\n\t\tconst propellerGeometry = new Geometry();\n\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tconst blade = new Cube(\n\t\t\t\t[50, 2, 1],\n\t\t\t\t{\n\t\t\t\t\tx: 4 * Math.cos(i * (Math.PI / 6)),\n\t\t\t\t\ty: 4 * Math.sin(i * (Math.PI / 6)),\n\t\t\t\t\tz: 30\n\t\t\t\t}\n\t\t\t).mesh;\n\t\t\tblade.geometry.translate(20, 0, 0);\n\n\t\t\tblade.geometry.vertices[1].z -= 8;\n\t\t\tblade.geometry.vertices[1].y += 10;\n\n\t\t\tblade.rotation.z += i * Math.PI / 6;\n\t\t\tblade.updateMatrix();\n\n\t\t\tpropellerGeometry.merge(blade.geometry, blade.matrix);\n\t\t};\n\n\t\t// hub\n\t\tconst propellerHub = new Mesh(\n\t\t\tnew CylinderGeometry(10, 1, 10, 8, 1)\n\t\t);\n\t\tpropellerHub.rotation.x -= Math.PI / 2;\n\t\tpropellerHub.position.z += 35;\n\t\tpropellerHub.updateMatrix();\n\t\tpropellerGeometry.merge(propellerHub.geometry, propellerHub.matrix);\n\n\n\t\t// full propeller\n\t\tthis.propeller = new Mesh(propellerGeometry, materials.lightMetal);\n\t\tthis.propeller.castShadow = true;\n\t\tthis.propeller.receiveShadow = true;\n\n\n\t\tthis.mesh.add(\n\t\t\tturbine,\n\t\t\tthis.propeller\n\t\t);\n\t}\n\n\trotate = (value) => {\n\t\tthis.propeller.rotation.z += value;\n\t}\n}","import {\n\tMesh,\n\tCylinderGeometry,\n\tObject3D } from 'three';\n\nimport { materials } from '../../modules/materials';\n\nimport Turbine from './Turbine';\n\n\nexport default class Cabine {\n\tconstructor() {\n\t\t\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'cabine';\n\n\n\t\t// this\n\t\tconst cabine = new Mesh(\n\t\t\tnew CylinderGeometry(150, 100, 80, 16, 1),\n\t\t\tmaterials.darkMetal\n\t\t);\n\t\tcabine.scale.x = .5;\n\t\tcabine.updateMatrix();\n\n\n\t\t// turbine\n\t\tthis.turbines = [];\n\n\t\tconst turbineParams = [\n\t\t\t{x: 200, y: -50, z: 0, rx: 0, ry: 0, rz: 0},\n\t\t\t{x: -200, y: -50, z: 0, rx: Math.PI, ry: Math.PI, rz: Math.PI / 4},\n\t\t];\n\n\t\tfor (let i = 0; i < turbineParams.length; i++) {\n\t\t\tconst turbine = new Turbine();\n\t\t\tturbine.mesh.position.set(\n\t\t\t\tturbineParams[i].x,\n\t\t\t\tturbineParams[i].y,\n\t\t\t\tturbineParams[i].z\n\t\t\t);\n\n\t\t\tturbine.mesh.rotation.set(\n\t\t\t\tturbineParams[i].rx,\n\t\t\t\tturbineParams[i].ry,\n\t\t\t\tturbineParams[i].rz\n\t\t\t);\n\n\t\t\tturbine.mesh.rotation.z -= Math.PI / 8;\n\n\t\t\tthis.turbines.push(turbine);\n\t\t};\n\n\n\n\t\t// final\n\t\tthis.mesh.add(\n\t\t\tcabine,\n\t\t\t...(this.turbines.map(turbine => turbine.mesh))\n\t\t);\n\t\tthis.mesh.castShadow = true;\n\t\tthis.mesh.receiveShadow = true;\n\t}\n}","import { Object3D, ExtrudeGeometry, Geometry, Mesh, Vector3 } from 'three';\n\nimport { materials } from '../../modules/materials';\n\nimport Balloon from './Balloon';\nimport Fan from './Fan';\nimport Tanks from './Tanks';\nimport Cabine from './Cabine';\nimport Hose from './hose';\n\n\nexport default class Zeppelin {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'zeppelin';\n\n\t\tthis.mesh.position.set(-400, 550, -900);\n\n\n\t\tconst balloon = (new Balloon()).mesh;\n\t\t\n\t\t\n\t\t// fans\n\t\tthis.fans = [];\n\n\t\tconst fansParams = [\n\t\t\t{x: 250, y: 0, z: 200, ry: 0, full: true, mirrored: false},\n\t\t\t{x: 240, y: 0, z: -200, ry: 0, full: true, mirrored: true},\n\t\t\t{x: -250, y: 0, z: 200, ry: Math.PI, full: false, mirrored: false},\n\t\t\t{x: -240, y: 0, z: -200, ry: Math.PI, full: false, mirrored: false}\n\t\t];\n\n\t\tfor (let i = 0; i < fansParams.length; i++) {\n\t\t\tconst fan = new Fan(fansParams[i].full, fansParams[i].mirrored);\n\t\t\tfan.mesh.position.set(\n\t\t\t\tfansParams[i].x,\n\t\t\t\tfansParams[i].y,\n\t\t\t\tfansParams[i].z\n\t\t\t);\n\t\t\tfan.mesh.rotation.y += fansParams[i].ry;\n\t\t\t// fan.mesh.rotation.x += Math.PI;\n\t\t\tthis.fans.push(fan);\n\t\t};\n\n\n\t\t// fuel tanks\n\t\tconst tanks = (new Tanks()).mesh;\n\t\ttanks.rotation.z -= Math.PI / 8;\n\t\ttanks.position.set(220, -65, -50);\n\n\n\t\t// hoses\n\t\tconst hosesGeometry = new Geometry();\n\n\t\tconst hosesParams = [\n\t\t\t[\n\t\t\t\tnew Vector3(200, -110, -15),\n\t\t\t\tnew Vector3(210, -150, 20),\n\t\t\t\tnew Vector3(195, -10, 60),\n\t\t\t\tnew Vector3(195, -50, 100),\n\t\t\t\tnew Vector3(220, 0, 160)\n\t\t\t],\n\t\t\t[\n\t\t\t\tnew Vector3(200, -110, -85),\n\t\t\t\tnew Vector3(210, -160, -140),\n\t\t\t\tnew Vector3(220, 20, -180)\n\t\t\t]\n\t\t];\n\n\t\tfor (let i = 0; i < hosesParams.length; i++) {\n\t\t\tconst hose = (new Hose( 4, hosesParams[i], 40 )).mesh;\n\n\t\t\thosesGeometry.merge(hose.geometry, hose.matrix);\n\t\t};\n\n\t\tconst hoses = new Mesh(hosesGeometry, materials.lightMetal);\n\t\thoses.castShadow = true;\n\t\thoses.receiveShadow = true;\n\n\n\t\t// cabine\n\t\tthis.cabine = new Cabine();\n\t\tthis.cabine.mesh.position.y -= 210;\n\n\n\t\tthis.mesh.add(\n\t\t\tthis.cabine.mesh,\n\t\t\tballoon,\n\t\t\t...(this.fans.map(fan => fan.mesh)),\n\t\t\ttanks,\n\t\t\thoses\n\t\t);\n\n\t\t// this.mesh.rotation.z = Math.PI;\n\t}\n}","import { Shape, Mesh, Vector3, ExtrudeGeometry, CatmullRomCurve3 } from 'three';\n\nimport { materials } from './materials';\n\n\nexport default class Water {\n\tconstructor(points = [new Vector3(0, 0, 0), new Vector3(1, 1, 1)], steps = 10) {\n\n\t\t// river path\n\t\tconst spline = new CatmullRomCurve3(points);\n\n\t\tvar extrudeSettings = {\n\t\t\tsteps\t\t\t: steps,\n\t\t\tbevelEnabled\t: false,\n\t\t\textrudePath\t\t: spline\n\t\t};\n\n\t\tconst circle = new Shape();\n\t\tconst cirlceRadius = 36;\n\t\tconst circleSegments = 16;\n\n\t\tcircle.moveTo(cirlceRadius * Math.cos(0), cirlceRadius * Math.sin(0));\n\n\t\tfor (let i = 1; i < circleSegments; i++) {\n\t\t\tcircle.lineTo(\n\t\t\t\tcirlceRadius * Math.cos(i * (2 * Math.PI) / circleSegments),\n\t\t\t\tcirlceRadius * Math.sin(i * (2 * Math.PI) / circleSegments) / 1.5\n\t\t\t);\n\t\t};\n\n        const geometry = new ExtrudeGeometry(circle, extrudeSettings);\n        const material = materials.water;\n\n\n\t\t// animation prepare\n        geometry.mergeVertices();\n\n\t\tconst l = geometry.vertices.length;\n\t\n        this.waves = [];\n\n        for (let i = 0; i < l; i++) {\n\n\t\t\tconst v = geometry.vertices[i];\n\n\t\t\tthis.waves.push({\n\t\t\t\ty: v.y,\n\t\t\t\tx: v.x,\n\t\t\t\tz: v.z,\n\t\t\t\tang: Math.random() * Math.PI * 2,\n\t\t\t\tamp: 5 + Math.random() * 15,\n\t\t\t\tspeed: 0.032 + Math.random() * 0.064\n\t\t\t});\n\t\t};\n\t\t\n\t\tthis.mesh = new Mesh(geometry, material);\n\t\tthis.mesh.receiveShadow = true;\n\t\tthis.mesh.castShadow = true;\n\t}\n\n\tmoveWaves = () => {\n\n\t\tconst verts = this.mesh.geometry.vertices;\n\t\tconst l = verts.length;\n\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\n\t\t\tconst v = verts[i];\n\n\t\t\t// get the data associated to it\n\t\t\tconst vprops = this.waves[i];\n\n\t\t\t// update the position of the vertex\n\t\t\tv.x = vprops.x - Math.cos(vprops.ang) * vprops.amp;\n\t\t\tv.y = vprops.y + Math.sin(vprops.ang) * vprops.amp;\n\n\t\t\t// increment the angle for the next frame\n\t\t\tvprops.ang += vprops.speed;\n\n\t\t}\n\n\t\tthis.mesh.geometry.verticesNeedUpdate = true;\n\t}\n}","import {\n\tObject3D,\n\tGeometry,\n\tCylinderGeometry,\n\tMesh,\n\tPointLight } from 'three';\n\nimport Cube from './Cube';\n\nimport { materials } from './materials';\n\n\nexport default class LampPost {\n\tconstructor() {\n\n\t\tthis.mesh = new Object3D();\n\t\tthis.mesh.name = 'lamp-post';\n\n\t\t// base\n\t\tconst baseVertical = (new Cube(\n\t\t\t[8, 100, 8]\n\t\t)).mesh;\n\t\tbaseVertical.geometry.vertices[2].x += 1;\n\t\tbaseVertical.geometry.vertices[2].z += 1;\n\t\tbaseVertical.geometry.vertices[3].x += 1;\n\t\tbaseVertical.geometry.vertices[3].z -= 1;\n\t\tbaseVertical.geometry.vertices[6].x -= 1;\n\t\tbaseVertical.geometry.vertices[6].z -= 1;\n\t\tbaseVertical.geometry.vertices[7].x -= 1;\n\t\tbaseVertical.geometry.vertices[7].z += 1;\n\t\tbaseVertical.updateMatrix();\n\n\t\tconst baseHorizontal = (new Cube(\n\t\t\t[6, 6, 40],\n\t\t\t{x: 0, y: 45, z: 12}\n\t\t)).mesh;\n\n\t\tconst baseAngle = (new Cube(\n\t\t\t[4, 4, 20],\n\t\t\t{x: 0, y: 38, z: 10}\n\t\t)).mesh;\n\t\tbaseAngle.rotation.x -= Math.PI / 4;\n\t\tbaseAngle.updateMatrix();\n\n\n\t\tconst baseGeometry = new Geometry();\n\t\tbaseGeometry.merge(baseVertical.geometry, baseVertical.matrix);\n\t\tbaseGeometry.merge(baseHorizontal.geometry, baseHorizontal.matrix);\n\t\tbaseGeometry.merge(baseAngle.geometry, baseAngle.matrix);\n\n\t\tconst base = new Mesh(baseGeometry, materials.wood);\n\t\tbase.castShadow = true;\n\t\tbase.receiveShadow = true;\n\n\n\t\t// lamp\n\t\tconst lamp = new Mesh(\n\t\t\tnew CylinderGeometry(1, 6, 4, 8),\n\t\t\tmaterials.darkMetal\n\t\t);\n\t\tlamp.castShadow = true;\n\t\tlamp.receiveShadow = true;\n\t\tlamp.position.set(0, 40, 30);\n\n\n\t\t// light\n\t\tthis.light = new PointLight(0xfddb92, 0, 0, 0);\n\n\t\tthis.light.castShadow = false;\n\t\tthis.light.shadow.mapSize.width = 16;\n\t\tthis.light.shadow.mapSize.height = 16;\n\n\t\tthis.light.position.set(-10, 30, 30);\n\n\n\t\tthis.mesh.add(\n\t\t\tbase,\n\t\t\tlamp,\n\t\t\tthis.light\n\t\t);\n\t}\n\n\tturnLights = (status) => {\n\t\tif (status) {\n\t\t\tthis.light.intensity = .95;\n\t\t\tthis.light.distance = 1000;\n\t\t\tthis.light.decay = 2;\n\t\t\tthis.light.castShadow = true;\n\t\t\tthis.light.shadow.mapSize.width = 128;\n\t\t\tthis.light.shadow.mapSize.height = 128;\n\t\t} else {\n\t\t\tthis.light.intensity = 0;\n\t\t\tthis.light.distance = 1;\n\t\t\tthis.light.decay = 1;\n\t\t\tthis.light.castShadow = false;\n\t\t\tthis.light.shadow.mapSize.width = 8;\n\t\t\tthis.light.shadow.mapSize.height = 8;\n\t\t};\n\t}\n}","\nexport const lightParams = {\n\n\tsunrise: {\n\t\themisphereLight: {\n\t\t\tintensity: .6\n\t\t},\n\t\tambientLight: {\n\t\t\tintensity: .3\n\t\t},\n\t\tsunLight: {\n\t\t\tintensity: .75,\n\t\t\tposition: [630, 210, -110],\n\t\t\tcolor: 0xffba87\n\t\t}\n\t},\n\n\tmidday: {\n\t\themisphereLight: {\n\t\t\tintensity: .9\n\t\t},\n\t\tambientLight: {\n\t\t\tintensity: .5\n\t\t},\n\t\tsunLight: {\n\t\t\tintensity: .75,\n\t\t\tposition: [-280, 695, 350],\n\t\t\tcolor: 0xffffff\n\t\t}\n\t},\n\n\tsunset: {\n\t\themisphereLight: {\n\t\t\tintensity: .6\n\t\t},\n\t\tambientLight: {\n\t\t\tintensity: .3\n\t\t},\n\t\tsunLight: {\n\t\t\tintensity: .75,\n\t\t\tposition: [-290, 560, 900],\n\t\t\tcolor: 0xffba87\n\t\t}\n\t},\n\n\tmidnight: {\n\t\themisphereLight: {\n\t\t\tintensity: .025\n\t\t},\n\t\tambientLight: {\n\t\t\tintensity: .025\n\t\t},\n\t\tsunLight: {\n\t\t\tintensity: .025,\n\t\t\tposition: [-420, 800, 370],\n\t\t\tcolor: 0xeeeeee\n\t\t}\n\t}\n\n}","\nexport const breakpoints = [6, 8, 17, 20];","\nexport default class Lang {\n\tconstructor() {\n\n\t\tthis.lang = navigator.language.substring(0, 2) || 'en';\n\n\t\tthis.localData = {\n\t\t\t'en': {\n\t\t\t\t'weekday':  ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'],\n\t\t\t\t'month': \t['january', 'february', 'march', 'aril', 'may', 'june', 'july', 'august\t', 'september', 'october', 'november', 'december']\n\t\t\t},\n\t\t\t'ru': {\n\t\t\t\t'weekday': ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\n\t\t\t\t'month': \t['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\n\t\t\t}\n\t\t};\n\t}\n\n\tget = (type, index) => this.localData[this.lang][type][index];\n}","import Lang from './Lang';\n\n\nexport default class Time {\n\tconstructor() {\n\n\t\tthis.now = new Date(0);\n\t\tthis.lang = new Lang();\n\n\t\tthis.timeNode = document.getElementById('time');\n\t\tthis.dayNode = document.getElementById('day');\n\n\t\tthis.update();\n\t}\n\n\tupdate = () => {\n\t\tif ((Date.now() - this.now) > 60000) {\n\t\t\t\n\t\t\tthis.now = new Date();\n\n\t\t\tthis.hours = ('0' + this.now.getHours()).slice(-2);\n\t\t\tthis.minutes = ('0' + this.now.getMinutes()).slice(-2);\n\t\t\t\n\t\t\tthis.date = this.now.getDate();\n\t\t\tthis.month = this.lang.get('month', this.now.getMonth());\n\t\t\tthis.day = this.lang.get('weekday', this.now.getDay());\n\n\t\t\tif (!this.timeNode) return\n\n\t\t\tthis.timeNode.innerHTML = `${this.hours}:${this.minutes}`;\n\t\t\tthis.dayNode.innerHTML = `${this.date} ${this.month}, ${this.day}`;\n\t\t};\n\t};\n\n\tgetHours = () => this.hours;\n};","import Stats from 'stats.js'\nimport * as dat from 'dat.gui'\n\n// const THREE = require('three');\n\n// const OrbitControls = require('three-orbit-controls')(THREE);\n\nimport {\n\tHemisphereLight,\n\tAmbientLight,\n\tObject3D,\n\tVector3,\n\tClock,\n\tDirectionalLightHelper } from 'three';\n\n\nimport createScene from './createScene';\nimport createCamera from './createCamera';\nimport createRenderer from './createRenderer';\nimport createSun from './createSun';\n\n\nimport BottomIsland from '../sceneObjects/BottomIsland/BottomIsland';\nimport MiddleIsland from '../sceneObjects/MiddleIsland/MiddleIsland';\nimport TopIsland from '../sceneObjects/TopIsland/TopIsland';\nimport Zeppelin from '../sceneObjects/Zeppelin/Zeppelin';\n\nimport Water from './Water';\nimport LampPost from './LampPost';\n\n// temp\nimport { materials } from './materials';\n\nimport { lightParams } from './lightParams';\nimport { breakpoints } from './daytimeParams';\n\nimport Time from './Time';\n\n\nexport default async function init() {\n\n\tlet WIDTH = window.innerWidth;\n\tlet HEIGHT = window.innerHeight;\n\n\twindow.addEventListener('resize', () => {\n\t\tWIDTH = window.innerWidth;\n\t\tHEIGHT = window.innerHeight;\n\n\t\trenderer.setSize(WIDTH, HEIGHT);\n\t\tcamera.aspect = WIDTH / HEIGHT;\n\t\tcamera.updateProjectionMatrix();\n\t}, false);\n\n\n\t// main\n\tconst scene = createScene();\n\tconst camera = createCamera(WIDTH, HEIGHT);\n\tconst renderer = await createRenderer('world', WIDTH, HEIGHT, true);\n\n\n\t// lights (default params)\n\tconst hemisphereLight = new HemisphereLight(0xaaaaaa, 0x000000, .9);\n\tconst ambientLight = new AmbientLight(0x404040, .5);\n\tconst sunLight = createSun();\n\n\n\n\n\tfunction setLights(dayTime) {\n\n\t\themisphereLight.intensity = lightParams[dayTime].hemisphereLight.intensity;\n\n\t\tambientLight.intensity = lightParams[dayTime].ambientLight.intensity;\n\n\t\tsunLight.intensity = lightParams[dayTime].sunLight.intensity;\n\t\tsunLight.color.setHex(lightParams[dayTime].sunLight.color);\n\t\tsunLight.position.set(...lightParams[dayTime].sunLight.position);\n\n\t\t\n\t\tif (dayTime === 'midnight') {\n\t\t\tlampPosts.map(lampPost => lampPost.turnLights(true) );\n\t\t\tmaterials.line.color.setHex( 0x111111 );\n\t\t} else {\n\t\t\tlampPosts.map(lampPost => lampPost.turnLights() )\n\t\t\tmaterials.line.color.setHex( 0xdcbbb4 );\n\t\t}\n\t};\n\n\n\t// orbit controls\n\t// const controls = new OrbitControls(camera);\n\t// controls.enabled = false;\n\n\n\tconst bottomIsland = new BottomIsland();\n\tconst middleIsland = new MiddleIsland();\n\tconst topIsland = new TopIsland();\n\tconst zeppelin = new Zeppelin();\n\n\tconst islands = new Object3D();\n\tislands.name = 'islands';\n\n\tislands.add(\n\t\tbottomIsland.mesh,\n\t\tmiddleIsland.mesh,\n\t\ttopIsland.mesh,\n\t);\n\n\n\t// river parts\n\tconst river = [];\n\n\tconst riverParams = [\n\t\t{\n\t\t\tpoints: [\n\t\t\t\tnew Vector3(-450, 690, 40),\n\t\t\t\tnew Vector3(-370, 615, 40),\n\t\t\t\tnew Vector3(-195, 600, 40),\n\t\t\t\tnew Vector3(-180, 210, 40),\n\t\t\t\tnew Vector3(-60, 210, 50),\n\t\t\t\tnew Vector3(-20, 210, 100),\n\t\t\t\tnew Vector3(15, 205, 210),\n\t\t\t\tnew Vector3(0, -180, 230),\n\t\t\t\tnew Vector3(0, -180, 570)\n\t\t\t],\n\t\t\tsteps: 25\n\t\t},\n\t\t{\n\t\t\tpoints: [\n\t\t\t\tnew Vector3(0, -250, 665),\n\t\t\t\tnew Vector3(0, -380, 665)\n\t\t\t],\n\t\t\tsteps: 4\n\t\t},\n\t\t{\n\t\t\tpoints: [\n\t\t\t\tnew Vector3(-450, 90, 80),\n\t\t\t\tnew Vector3(-450, 0, 80),\n\t\t\t],\n\t\t\tsteps: 2\n\t\t}\n\t];\n\n\tfor (let i = 0; i < riverParams.length; i++) {\n\t\triver.push(\n\t\t\tnew Water(\n\t\t\t\triverParams[i].points,\n\t\t\t\triverParams[i].steps\n\t\t\t)\n\t\t);\n\t};\n\n\triver.map(riverPart => islands.add(riverPart.mesh));\n\n\n\t// lamp posts\n\tlet lampPosts = [];\n\n\tconst lampPostParams = [\n\t\t{ x: -215, y: 650, z: -185, ry: 0 },\n\t\t{ x: -215, y: 650, z: 185, ry: Math.PI },\n\t\t{ x: 180, y: 250, z: -175, ry: -Math.PI / 4 },\n\t\t{ x: 170, y: -150, z: 400, ry: -Math.PI / 2 }\n\t];\n\n\tfor (let i = 0; i < lampPostParams.length; i++) {\n\t\tconst lampPost = new LampPost();\n\n\t\tlampPost.mesh.position.set(\n\t\t\tlampPostParams[i].x,\n\t\t\tlampPostParams[i].y,\n\t\t\tlampPostParams[i].z\n\t\t);\n\n\t\tlampPost.mesh.rotation.y += lampPostParams[i].ry;\n\n\t\tlampPosts.push( lampPost );\n\t};\n\n\tislands.add(\n\t\t...(lampPosts.map( lampPost => lampPost.mesh ))\n\t);\n\n\n\t// final\n\tscene.add(\n\t\themisphereLight,\n\t\tambientLight,\n\t\tsunLight,\n\t\t// sunLightHelper, // temp\n\t\tislands,\n\t\tzeppelin.mesh\n\t);\n\t// isometric view\n\tscene.rotation.x = Math.PI / 4;\n\tscene.rotation.y = - Math.PI / 4;\n\n\n\t// status (only dev)\n\tlet stats\n\n\tif (process.env.NODE_ENV === 'development') {\n\t\tstats = new Stats()\n\t\tstats.showPanel(0)\n\t\tdocument.body.appendChild(stats.dom)\n\t}\n\n\n\t// animation\n\tconst clock = new Clock();\n\tlet delta;\n\n\n\t// mouse position\n\tconst mousePos = {\n\t\tx: WIDTH / 2, \t// default\n\t\ty: HEIGHT / 2,\n\t\tnX: 0,\t\t\t// normalized\n\t\tnY: 0\n\t};\n\tdocument.addEventListener('mousemove', event => {\n\t\tmousePos.nX = -1 + (event.clientX / WIDTH) * 2;\n\t\tmousePos.nY = 1 - (event.clientY / HEIGHT) * 2;\n\t});\n\n\n\t// mobile gyroscope\n\tconst gyroscope = {\n\t\tx: 0,\n\t\ty: 0,\n\t};\n\twindow.addEventListener('deviceorientation', event => {\n\n\t\tif (event.beta && event.gamma) {\n\t\n\t\t\tgyroscope.x = event.beta;\t// -180..180\n\t\t\tgyroscope.y = event.gamma;\t// -90..90\n\t\n\t\t\tif (gyroscope.x > 90)  { gyroscope.x = 90 };\n\t\t\tif (gyroscope.x < -90) { gyroscope.x = -90 };\n\t\n\t\t\tif (gyroscope.y > 45)  { gyroscope.y = 45 };\n\t\t\tif (gyroscope.y < -45) { gyroscope.y = -45 };\n\t\n\t\t\tmousePos.nY = -1 + (gyroscope.x / 90) * 2;\n\t\t\tmousePos.nX = 1 - (gyroscope.y / 45) * 2;\n\n\t\t};\n\n\t}, true);\n\n\n\t// when all loaded\n\t// time\n\tconst time = new Time();\n\tlet hours = +time.getHours();\n\n\n\tlet worldNode = document.getElementById('world');\n\n\tfunction updateLights(hours) {\n\t\tif (hours >= breakpoints[0] && hours < breakpoints[1]) {\n\t\t\tworldNode.className = 'sunrise';\n\t\t\tsetLights('sunrise');\n\t\n\t\t} else if (hours >= breakpoints[1] && hours < breakpoints[2]) {\n\t\t\tworldNode.className = 'midday';\n\t\t\tsetLights('midday');\n\t\n\t\t} else if (hours >= breakpoints[2] && hours < breakpoints[3]) {\n\t\t\tworldNode.className = 'sunset';\n\t\t\tsetLights('sunset');\n\n\t\t} else {\n\t\t\tworldNode.className = 'midnight';\n\t\t\tmaterials.line.color.setHex(0x111111);\n\t\t\tsetLights('midnight');\n\t\t};\n\t};\n\n\tupdateLights(hours);\n\n\n\t// vane\n\tconst vane = middleIsland.windvane.vane\n\n\t// animation\n\tlet easing = .05\n\tlet i = 0\n\n\tdocument.body.classList.add('loaded')\n\n\tfunction loop() {\n\n\t\t//\n\t\tif (stats) stats.begin()\n\n\t\tdelta =  clock.getDelta()\n\n\t\t// fans\n\t\tmiddleIsland.fans[0].rotate(5 * delta)\n\t\tmiddleIsland.fans[1].rotate(6 * delta)\n\n\t\ttopIsland.fans[0].rotate(-2 * delta)\n\t\ttopIsland.fans[1].rotate(-4 * delta)\n\n\n\t\t// windvane\n\t\tmiddleIsland.windvane.rotateFan(delta)\n\n\n\t\t// waves\n\t\triver[0].moveWaves()\n\t\triver[1].moveWaves()\n\t\triver[2].moveWaves()\n\n\t\t// zeppelin\n\t\tzeppelin.fans[0].rotate(20 * delta)\n\t\tzeppelin.fans[1].rotate(21 * delta)\n\t\tzeppelin.fans[2].rotate(19 * delta)\n\t\tzeppelin.fans[3].rotate(22 * delta)\n\t\tzeppelin.cabine.turbines[0].rotate(.25 * delta)\n\t\tzeppelin.cabine.turbines[1].rotate(.25 * delta)\n\n\t\t// fly\n\t\tzeppelin.mesh.position.y += Math.sin(i * Math.PI)\n\t\tislands.position.y += Math.cos(i * Math.PI) / 2\n\n\t\t// windvane\n\t\tvane.rotation.y += Math.cos(i * Math.PI) * easing / 10\n\t\t\n\t\ti += .01\n\n\n\t\t// camera\n\t\tscene.rotation.x += (-mousePos.nY * (Math.PI / 10) + (Math.PI / 4) - scene.rotation.x) * easing\n\t\tscene.rotation.y += (mousePos.nX * (Math.PI / 8) - (Math.PI / 4) - scene.rotation.y) * easing\n\n\n\t\trenderer.render(scene, camera)\n\t\ttime.update()\n\n\t\t//\n\t\tif (stats) stats.end()\n\n\t\trequestAnimationFrame(loop)\n\t}\n\tloop()\n\n\n\t// export scene\n\tif (process.env.NODE_ENV === 'development') {\n\n\t\tconsole.log('press s to save scene to json')\n\n\t\tdocument.addEventListener('keypress', ({ keyCode }) => {\n\t\t\tif (keyCode === 115) {\n\t\t\t\tlet json = JSON.stringify(scene.toJSON())\n\n\t\t\t\tlet blob = new Blob([json], { type: 'application/json' })\n\n\t\t\t\tlet url  = URL.createObjectURL(blob)\n\t\t\n\t\t\t\tlet a = document.createElement('a')\n\t\t\t\ta.download = 'scene.json'\n\t\t\t\ta.href = url\n\t\t\t\ta.textContent = 'Download scene.json'\n\t\t\n\t\t\t\ta.click()\n\t\t\t}\n\t\t})\n\t}\n\n\n\t// dat.GUI\n\tlet gui = new dat.GUI({ autoplace: false });\n\tgui.closed = true;\n\n\tconst guiContainer = document.getElementById('gui');\n\tguiContainer.appendChild(gui.domElement);\n\n\t// let directionalLight = gui.addFolder('scene light');\n\t// directionalLight.add(scene.children[2].position, 'x', (- 1000), 1000);\n\t// directionalLight.add(scene.children[2].position, 'y', (- 1000), 1000);\n\t// directionalLight.add(scene.children[2].position, 'z', (- 1000), 1000);\n\t// directionalLight.open();\n\n\tlet params = {\n\t\tcameraControls: true,\n\t\tisOverride: false,\n\t\tsunrise: \t() => updateLights(7),\n\t\tmidday: \t() => updateLights(11),\n\t\tsunset: \t() => updateLights(19),\n\t\tmidnight: \t() => updateLights(0)\n\t};\n\n\t// gui.add(params, 'cameraControls').onChange(() => {\n\t// \tcontrols.enabled = (params.cameraControls) ? true : false\n\t// }).name('camera controls');\n\n\t// gui.add(params, 'isOverride').onChange(() => {\n\t// \tscene.overrideMaterial = (params.isOverride) ? materials.override : false;\n\t// }).name('wireframe');\n\t\n\tlet dayTimeGUI = gui.addFolder('daytime');\n\tdayTimeGUI.add(params, 'sunrise');\n\tdayTimeGUI.add(params, 'midday');\n\tdayTimeGUI.add(params, 'sunset');\n\tdayTimeGUI.add(params, 'midnight');\n\tdayTimeGUI.open();\n\n\t// console.log(scene);\n\t// console.log(renderer.info);\n}","// import 'babel-polyfill';\n\nimport main from './styles/main.styl'\nimport preloader from './styles/preloader.css'\n\nimport init from './modules/init'\n\n\nwindow.addEventListener('load', () => {\n\n    // console.log(process.env.NODE_ENV)\n\n    init()\n\n\n    let showControls = process.env.NODE_ENV === 'development'\n\n    let toggleControls = () => {\n        if (showControls) document.body.classList.add('show-controls')\n        else document.body.classList.remove('show-controls')\n    }\n\n    toggleControls()\n\n    document.addEventListener('keyup', ({ keyCode }) => {\n        if (keyCode !== 72) return\n\n        showControls = !showControls\n\n        toggleControls()\n    })\n\n    console.log('press h to show controls')\n})\n"],"sourceRoot":""}